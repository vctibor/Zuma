<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="453.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="453.00"> </text><svg id="frames" x="10" width="1180"><g><title>libsystem_kernel.dylib`__close_nocancel (88 samples, 0.17%)</title><rect x="0.0000%" y="309" width="0.1654%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__open (133 samples, 0.25%)</title><rect x="0.1917%" y="261" width="0.2499%" height="15" fill="rgb(217,0,24)"/><text x="0.4417%" y="271.50"></text></g><g><title>zuma`std::fs::File::create (134 samples, 0.25%)</title><rect x="0.1917%" y="293" width="0.2518%" height="15" fill="rgb(221,193,54)"/><text x="0.4417%" y="303.50"></text></g><g><title>zuma`std::fs::OpenOptions::_open (134 samples, 0.25%)</title><rect x="0.1917%" y="277" width="0.2518%" height="15" fill="rgb(248,212,6)"/><text x="0.4417%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__open (34 samples, 0.06%)</title><rect x="0.4435%" y="261" width="0.0639%" height="15" fill="rgb(208,68,35)"/><text x="0.6935%" y="271.50"></text></g><g><title>zuma`std::fs::read_to_string::inner (35 samples, 0.07%)</title><rect x="0.4435%" y="293" width="0.0658%" height="15" fill="rgb(232,128,0)"/><text x="0.6935%" y="303.50"></text></g><g><title>zuma`std::fs::OpenOptions::_open (35 samples, 0.07%)</title><rect x="0.4435%" y="277" width="0.0658%" height="15" fill="rgb(207,160,47)"/><text x="0.6935%" y="287.50"></text></g><g><title>zuma`std::io::Write::write_all (94 samples, 0.18%)</title><rect x="0.5092%" y="293" width="0.1766%" height="15" fill="rgb(228,23,34)"/><text x="0.7592%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`write (94 samples, 0.18%)</title><rect x="0.5092%" y="277" width="0.1766%" height="15" fill="rgb(218,30,26)"/><text x="0.7592%" y="287.50"></text></g><g><title>zuma`&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (6 samples, 0.01%)</title><rect x="0.6990%" y="245" width="0.0113%" height="15" fill="rgb(220,122,19)"/><text x="0.9490%" y="255.50"></text></g><g><title>zuma`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (6 samples, 0.01%)</title><rect x="0.6990%" y="229" width="0.0113%" height="15" fill="rgb(250,228,42)"/><text x="0.9490%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`write (6 samples, 0.01%)</title><rect x="0.6990%" y="213" width="0.0113%" height="15" fill="rgb(240,193,28)"/><text x="0.9490%" y="223.50"></text></g><g><title>zuma`std::io::stdio::_print (14 samples, 0.03%)</title><rect x="0.6859%" y="293" width="0.0263%" height="15" fill="rgb(216,20,37)"/><text x="0.9359%" y="303.50"></text></g><g><title>zuma`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (11 samples, 0.02%)</title><rect x="0.6915%" y="277" width="0.0207%" height="15" fill="rgb(206,188,39)"/><text x="0.9415%" y="287.50"></text></g><g><title>zuma`core::fmt::write (10 samples, 0.02%)</title><rect x="0.6934%" y="261" width="0.0188%" height="15" fill="rgb(217,207,13)"/><text x="0.9434%" y="271.50"></text></g><g><title>zuma`std::thread::sleep (8 samples, 0.02%)</title><rect x="0.7122%" y="293" width="0.0150%" height="15" fill="rgb(231,73,38)"/><text x="0.9622%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (50 samples, 0.09%)</title><rect x="0.7272%" y="277" width="0.0940%" height="15" fill="rgb(225,20,46)"/><text x="0.9772%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (104 samples, 0.20%)</title><rect x="0.8268%" y="277" width="0.1954%" height="15" fill="rgb(210,31,41)"/><text x="1.0768%" y="287.50"></text></g><g><title>zuma`__rdl_dealloc (55 samples, 0.10%)</title><rect x="1.0391%" y="277" width="0.1034%" height="15" fill="rgb(221,200,47)"/><text x="1.2891%" y="287.50"></text></g><g><title>zuma`__rust_dealloc (19 samples, 0.04%)</title><rect x="1.1425%" y="277" width="0.0357%" height="15" fill="rgb(226,26,5)"/><text x="1.3925%" y="287.50"></text></g><g><title>zuma`alloc::fmt::format (8 samples, 0.02%)</title><rect x="1.1782%" y="277" width="0.0150%" height="15" fill="rgb(249,33,26)"/><text x="1.4282%" y="287.50"></text></g><g><title>zuma`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="1.1932%" y="277" width="0.0113%" height="15" fill="rgb(235,183,28)"/><text x="1.4432%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (120 samples, 0.23%)</title><rect x="1.7795%" y="261" width="0.2255%" height="15" fill="rgb(221,5,38)"/><text x="2.0295%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (647 samples, 1.22%)</title><rect x="2.6307%" y="245" width="1.2158%" height="15" fill="rgb(247,18,42)"/><text x="2.8807%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (572 samples, 1.07%)</title><rect x="2.7717%" y="229" width="1.0748%" height="15" fill="rgb(241,131,45)"/><text x="3.0217%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (1,011 samples, 1.90%)</title><rect x="2.0050%" y="261" width="1.8998%" height="15" fill="rgb(249,31,29)"/><text x="2.2550%" y="271.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_size (31 samples, 0.06%)</title><rect x="3.8465%" y="245" width="0.0583%" height="15" fill="rgb(225,111,53)"/><text x="4.0965%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (21 samples, 0.04%)</title><rect x="6.3965%" y="245" width="0.0395%" height="15" fill="rgb(238,160,17)"/><text x="6.6465%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (12 samples, 0.02%)</title><rect x="6.4359%" y="245" width="0.0225%" height="15" fill="rgb(214,148,48)"/><text x="6.6859%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (707 samples, 1.33%)</title><rect x="8.1309%" y="229" width="1.3285%" height="15" fill="rgb(232,36,49)"/><text x="8.3809%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3,195 samples, 6.00%)</title><rect x="3.9123%" y="261" width="6.0037%" height="15" fill="rgb(209,103,24)"/><text x="4.1623%" y="271.50">libsyste..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1,840 samples, 3.46%)</title><rect x="6.4585%" y="245" width="3.4575%" height="15" fill="rgb(229,88,8)"/><text x="6.7085%" y="255.50">lib..</text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (243 samples, 0.46%)</title><rect x="9.4594%" y="229" width="0.4566%" height="15" fill="rgb(213,181,19)"/><text x="9.7094%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (8 samples, 0.02%)</title><rect x="9.9160%" y="261" width="0.0150%" height="15" fill="rgb(254,191,54)"/><text x="10.1660%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (41 samples, 0.08%)</title><rect x="9.9367%" y="261" width="0.0770%" height="15" fill="rgb(241,83,37)"/><text x="10.1867%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.03%)</title><rect x="10.0137%" y="261" width="0.0338%" height="15" fill="rgb(233,36,39)"/><text x="10.2637%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (14 samples, 0.03%)</title><rect x="10.0475%" y="261" width="0.0263%" height="15" fill="rgb(226,3,54)"/><text x="10.2975%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (48 samples, 0.09%)</title><rect x="10.0738%" y="261" width="0.0902%" height="15" fill="rgb(245,192,40)"/><text x="10.3238%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (83 samples, 0.16%)</title><rect x="10.2392%" y="229" width="0.1560%" height="15" fill="rgb(238,167,29)"/><text x="10.4892%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (74 samples, 0.14%)</title><rect x="10.2561%" y="213" width="0.1391%" height="15" fill="rgb(232,182,51)"/><text x="10.5061%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (71 samples, 0.13%)</title><rect x="10.2618%" y="197" width="0.1334%" height="15" fill="rgb(231,60,39)"/><text x="10.5118%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.02%)</title><rect x="10.3764%" y="181" width="0.0188%" height="15" fill="rgb(208,69,12)"/><text x="10.6264%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (89 samples, 0.17%)</title><rect x="10.2298%" y="245" width="0.1672%" height="15" fill="rgb(235,93,37)"/><text x="10.4798%" y="255.50"></text></g><g><title>zuma`&lt;alloc::string::String as core::clone::Clone&gt;::clone (134 samples, 0.25%)</title><rect x="10.1640%" y="261" width="0.2518%" height="15" fill="rgb(213,116,39)"/><text x="10.4140%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.02%)</title><rect x="10.3971%" y="245" width="0.0188%" height="15" fill="rgb(222,207,29)"/><text x="10.6471%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (16 samples, 0.03%)</title><rect x="10.7748%" y="181" width="0.0301%" height="15" fill="rgb(206,96,30)"/><text x="11.0248%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (153 samples, 0.29%)</title><rect x="10.5756%" y="213" width="0.2875%" height="15" fill="rgb(218,138,4)"/><text x="10.8256%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (145 samples, 0.27%)</title><rect x="10.5906%" y="197" width="0.2725%" height="15" fill="rgb(250,191,14)"/><text x="10.8406%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (31 samples, 0.06%)</title><rect x="10.8048%" y="181" width="0.0583%" height="15" fill="rgb(239,60,40)"/><text x="11.0548%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (182 samples, 0.34%)</title><rect x="10.5230%" y="245" width="0.3420%" height="15" fill="rgb(206,27,48)"/><text x="10.7730%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (164 samples, 0.31%)</title><rect x="10.5568%" y="229" width="0.3082%" height="15" fill="rgb(225,35,8)"/><text x="10.8068%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (16 samples, 0.03%)</title><rect x="10.8649%" y="245" width="0.0301%" height="15" fill="rgb(250,213,24)"/><text x="11.1149%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (29 samples, 0.05%)</title><rect x="11.2708%" y="213" width="0.0545%" height="15" fill="rgb(247,123,22)"/><text x="11.5208%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (58 samples, 0.11%)</title><rect x="11.5114%" y="197" width="0.1090%" height="15" fill="rgb(231,138,38)"/><text x="11.7614%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.02%)</title><rect x="11.7819%" y="181" width="0.0207%" height="15" fill="rgb(231,145,46)"/><text x="12.0319%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="14.3544%" y="165" width="0.0113%" height="15" fill="rgb(251,118,11)"/><text x="14.6044%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2,022 samples, 3.80%)</title><rect x="11.6203%" y="197" width="3.7995%" height="15" fill="rgb(217,147,25)"/><text x="11.8703%" y="207.50">libs..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1,925 samples, 3.62%)</title><rect x="11.8026%" y="181" width="3.6173%" height="15" fill="rgb(247,81,37)"/><text x="12.0526%" y="191.50">libs..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (561 samples, 1.05%)</title><rect x="14.3657%" y="165" width="1.0542%" height="15" fill="rgb(209,12,38)"/><text x="14.6157%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (100 samples, 0.19%)</title><rect x="15.2320%" y="149" width="0.1879%" height="15" fill="rgb(227,1,9)"/><text x="15.4820%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2,190 samples, 4.12%)</title><rect x="11.3253%" y="213" width="4.1152%" height="15" fill="rgb(248,47,43)"/><text x="11.5753%" y="223.50">libs..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="15.4199%" y="197" width="0.0207%" height="15" fill="rgb(221,10,30)"/><text x="15.6699%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2,303 samples, 4.33%)</title><rect x="11.1675%" y="229" width="4.3276%" height="15" fill="rgb(210,229,1)"/><text x="11.4175%" y="239.50">libsy..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (29 samples, 0.05%)</title><rect x="15.4406%" y="213" width="0.0545%" height="15" fill="rgb(222,148,37)"/><text x="15.6906%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (16 samples, 0.03%)</title><rect x="15.4950%" y="229" width="0.0301%" height="15" fill="rgb(234,67,33)"/><text x="15.7450%" y="239.50"></text></g><g><title>zuma`&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,584 samples, 4.86%)</title><rect x="10.8950%" y="245" width="4.8556%" height="15" fill="rgb(247,98,35)"/><text x="11.1450%" y="255.50">zuma`&lt;..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (120 samples, 0.23%)</title><rect x="15.5251%" y="229" width="0.2255%" height="15" fill="rgb(247,138,52)"/><text x="15.7751%" y="239.50"></text></g><g><title>zuma`DYLD-STUB$$memcpy (20 samples, 0.04%)</title><rect x="15.7506%" y="245" width="0.0376%" height="15" fill="rgb(213,79,30)"/><text x="16.0006%" y="255.50"></text></g><g><title>zuma`__rdl_alloc (20 samples, 0.04%)</title><rect x="15.7882%" y="245" width="0.0376%" height="15" fill="rgb(246,177,23)"/><text x="16.0382%" y="255.50"></text></g><g><title>zuma`&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2,886 samples, 5.42%)</title><rect x="10.4158%" y="261" width="5.4231%" height="15" fill="rgb(230,62,27)"/><text x="10.6658%" y="271.50">zuma`&lt;a..</text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (10 samples, 0.02%)</title><rect x="15.8408%" y="245" width="0.0188%" height="15" fill="rgb(216,154,8)"/><text x="16.0908%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (29 samples, 0.05%)</title><rect x="15.9235%" y="229" width="0.0545%" height="15" fill="rgb(244,35,45)"/><text x="16.1735%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (28 samples, 0.05%)</title><rect x="15.9254%" y="213" width="0.0526%" height="15" fill="rgb(251,115,12)"/><text x="16.1754%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (65 samples, 0.12%)</title><rect x="15.8596%" y="245" width="0.1221%" height="15" fill="rgb(240,54,50)"/><text x="16.1096%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (9 samples, 0.02%)</title><rect x="16.1321%" y="213" width="0.0169%" height="15" fill="rgb(233,84,52)"/><text x="16.3821%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (32 samples, 0.06%)</title><rect x="16.1490%" y="213" width="0.0601%" height="15" fill="rgb(207,117,47)"/><text x="16.3990%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (56 samples, 0.11%)</title><rect x="16.2091%" y="213" width="0.1052%" height="15" fill="rgb(249,43,39)"/><text x="16.4591%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (9 samples, 0.02%)</title><rect x="16.3143%" y="213" width="0.0169%" height="15" fill="rgb(209,38,44)"/><text x="16.5643%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (192 samples, 0.36%)</title><rect x="15.9817%" y="245" width="0.3608%" height="15" fill="rgb(236,212,23)"/><text x="16.2317%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (157 samples, 0.30%)</title><rect x="16.0475%" y="229" width="0.2950%" height="15" fill="rgb(242,79,21)"/><text x="16.2975%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (6 samples, 0.01%)</title><rect x="16.3312%" y="213" width="0.0113%" height="15" fill="rgb(211,96,35)"/><text x="16.5812%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (50 samples, 0.09%)</title><rect x="16.3425%" y="245" width="0.0940%" height="15" fill="rgb(253,215,40)"/><text x="16.5925%" y="255.50"></text></g><g><title>zuma`__rdl_dealloc (26 samples, 0.05%)</title><rect x="16.4384%" y="245" width="0.0489%" height="15" fill="rgb(211,81,21)"/><text x="16.6884%" y="255.50"></text></g><g><title>zuma`__rust_dealloc (9 samples, 0.02%)</title><rect x="16.4872%" y="245" width="0.0169%" height="15" fill="rgb(208,190,38)"/><text x="16.7372%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (68 samples, 0.13%)</title><rect x="16.6319%" y="229" width="0.1278%" height="15" fill="rgb(235,213,38)"/><text x="16.8819%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (416 samples, 0.78%)</title><rect x="17.1073%" y="213" width="0.7817%" height="15" fill="rgb(237,122,38)"/><text x="17.3573%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (388 samples, 0.73%)</title><rect x="17.1599%" y="197" width="0.7291%" height="15" fill="rgb(244,218,35)"/><text x="17.4099%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (618 samples, 1.16%)</title><rect x="16.7597%" y="229" width="1.1613%" height="15" fill="rgb(240,68,47)"/><text x="17.0097%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (17 samples, 0.03%)</title><rect x="17.8890%" y="213" width="0.0319%" height="15" fill="rgb(210,16,53)"/><text x="18.1390%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.02%)</title><rect x="19.4449%" y="213" width="0.0225%" height="15" fill="rgb(235,124,12)"/><text x="19.6949%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.01%)</title><rect x="19.4675%" y="213" width="0.0113%" height="15" fill="rgb(224,169,11)"/><text x="19.7175%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (88 samples, 0.17%)</title><rect x="20.7546%" y="197" width="0.1654%" height="15" fill="rgb(250,166,2)"/><text x="21.0046%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (49 samples, 0.09%)</title><rect x="20.9256%" y="197" width="0.0921%" height="15" fill="rgb(242,216,29)"/><text x="21.1756%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (523 samples, 0.98%)</title><rect x="21.0177%" y="197" width="0.9828%" height="15" fill="rgb(230,116,27)"/><text x="21.2677%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (402 samples, 0.76%)</title><rect x="22.0005%" y="197" width="0.7554%" height="15" fill="rgb(228,99,48)"/><text x="22.2505%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (50 samples, 0.09%)</title><rect x="22.7559%" y="197" width="0.0940%" height="15" fill="rgb(253,11,6)"/><text x="23.0059%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2,689 samples, 5.05%)</title><rect x="17.9210%" y="229" width="5.0529%" height="15" fill="rgb(247,143,39)"/><text x="18.1710%" y="239.50">libsys..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1,860 samples, 3.50%)</title><rect x="19.4787%" y="213" width="3.4951%" height="15" fill="rgb(236,97,10)"/><text x="19.7287%" y="223.50">lib..</text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (66 samples, 0.12%)</title><rect x="22.8498%" y="197" width="0.1240%" height="15" fill="rgb(233,208,19)"/><text x="23.0998%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (18 samples, 0.03%)</title><rect x="22.9400%" y="181" width="0.0338%" height="15" fill="rgb(216,164,2)"/><text x="23.1900%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (27 samples, 0.05%)</title><rect x="22.9739%" y="229" width="0.0507%" height="15" fill="rgb(220,129,5)"/><text x="23.2239%" y="239.50"></text></g><g><title>zuma`&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,841 samples, 7.22%)</title><rect x="15.8389%" y="261" width="7.2176%" height="15" fill="rgb(242,17,10)"/><text x="16.0889%" y="271.50">zuma`&lt;allo..</text></g><g><title>zuma`core::ptr::drop_in_place (3,487 samples, 6.55%)</title><rect x="16.5041%" y="245" width="6.5524%" height="15" fill="rgb(242,107,0)"/><text x="16.7541%" y="255.50">zuma`core..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.03%)</title><rect x="23.0246%" y="229" width="0.0319%" height="15" fill="rgb(251,28,31)"/><text x="23.2746%" y="239.50"></text></g><g><title>zuma`DYLD-STUB$$memcpy (7 samples, 0.01%)</title><rect x="23.0622%" y="261" width="0.0132%" height="15" fill="rgb(233,223,10)"/><text x="23.3122%" y="271.50"></text></g><g><title>zuma`__rdl_alloc (8 samples, 0.02%)</title><rect x="23.0753%" y="261" width="0.0150%" height="15" fill="rgb(215,21,27)"/><text x="23.3253%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (111 samples, 0.21%)</title><rect x="23.4098%" y="213" width="0.2086%" height="15" fill="rgb(232,23,21)"/><text x="23.6598%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (105 samples, 0.20%)</title><rect x="23.4211%" y="197" width="0.1973%" height="15" fill="rgb(244,5,23)"/><text x="23.6711%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (26 samples, 0.05%)</title><rect x="23.5695%" y="181" width="0.0489%" height="15" fill="rgb(226,81,46)"/><text x="23.8195%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (119 samples, 0.22%)</title><rect x="23.3967%" y="229" width="0.2236%" height="15" fill="rgb(247,70,30)"/><text x="23.6467%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (127 samples, 0.24%)</title><rect x="23.3854%" y="245" width="0.2386%" height="15" fill="rgb(212,68,19)"/><text x="23.6354%" y="255.50"></text></g><g><title>zuma`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (48 samples, 0.09%)</title><rect x="23.6259%" y="245" width="0.0902%" height="15" fill="rgb(240,187,13)"/><text x="23.8759%" y="255.50"></text></g><g><title>zuma`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (17 samples, 0.03%)</title><rect x="23.7161%" y="245" width="0.0319%" height="15" fill="rgb(223,113,26)"/><text x="23.9661%" y="255.50"></text></g><g><title>zuma`&lt;str as core::fmt::Display&gt;::fmt (19 samples, 0.04%)</title><rect x="23.7481%" y="245" width="0.0357%" height="15" fill="rgb(206,192,2)"/><text x="23.9981%" y="255.50"></text></g><g><title>zuma`core::fmt::Formatter::pad (8 samples, 0.02%)</title><rect x="23.7838%" y="245" width="0.0150%" height="15" fill="rgb(241,108,4)"/><text x="24.0338%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (10 samples, 0.02%)</title><rect x="24.1314%" y="229" width="0.0188%" height="15" fill="rgb(247,173,49)"/><text x="24.3814%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (12 samples, 0.02%)</title><rect x="24.1502%" y="229" width="0.0225%" height="15" fill="rgb(224,114,35)"/><text x="24.4002%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (38 samples, 0.07%)</title><rect x="24.1727%" y="229" width="0.0714%" height="15" fill="rgb(245,159,27)"/><text x="24.4227%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.01%)</title><rect x="24.9488%" y="197" width="0.0132%" height="15" fill="rgb(245,172,44)"/><text x="25.1988%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (26 samples, 0.05%)</title><rect x="25.0653%" y="181" width="0.0489%" height="15" fill="rgb(236,23,11)"/><text x="25.3153%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (768 samples, 1.44%)</title><rect x="25.1142%" y="181" width="1.4431%" height="15" fill="rgb(205,117,38)"/><text x="25.3642%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (723 samples, 1.36%)</title><rect x="25.1987%" y="165" width="1.3586%" height="15" fill="rgb(237,72,25)"/><text x="25.4487%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (51 samples, 0.10%)</title><rect x="26.4615%" y="149" width="0.0958%" height="15" fill="rgb(244,70,9)"/><text x="26.7115%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (13 samples, 0.02%)</title><rect x="26.5329%" y="133" width="0.0244%" height="15" fill="rgb(217,125,39)"/><text x="26.7829%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (857 samples, 1.61%)</title><rect x="24.9619%" y="197" width="1.6104%" height="15" fill="rgb(235,36,10)"/><text x="25.2119%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="26.5573%" y="181" width="0.0150%" height="15" fill="rgb(251,123,47)"/><text x="26.8073%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (903 samples, 1.70%)</title><rect x="24.9037%" y="213" width="1.6968%" height="15" fill="rgb(221,13,13)"/><text x="25.1537%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.03%)</title><rect x="26.5742%" y="197" width="0.0263%" height="15" fill="rgb(238,131,9)"/><text x="26.8242%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (11 samples, 0.02%)</title><rect x="26.6005%" y="213" width="0.0207%" height="15" fill="rgb(211,50,8)"/><text x="26.8505%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (8 samples, 0.02%)</title><rect x="26.6212%" y="213" width="0.0150%" height="15" fill="rgb(245,182,24)"/><text x="26.8712%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (14 samples, 0.03%)</title><rect x="26.8504%" y="197" width="0.0263%" height="15" fill="rgb(242,14,37)"/><text x="27.1004%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (48 samples, 0.09%)</title><rect x="27.0120%" y="181" width="0.0902%" height="15" fill="rgb(246,228,12)"/><text x="27.2620%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (41 samples, 0.08%)</title><rect x="27.1060%" y="181" width="0.0770%" height="15" fill="rgb(213,55,15)"/><text x="27.3560%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (11 samples, 0.02%)</title><rect x="27.1830%" y="181" width="0.0207%" height="15" fill="rgb(209,9,3)"/><text x="27.4330%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.02%)</title><rect x="27.2037%" y="181" width="0.0244%" height="15" fill="rgb(230,59,30)"/><text x="27.4537%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (99 samples, 0.19%)</title><rect x="28.2936%" y="133" width="0.1860%" height="15" fill="rgb(209,121,21)"/><text x="28.5436%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (533 samples, 1.00%)</title><rect x="27.4950%" y="165" width="1.0016%" height="15" fill="rgb(220,109,13)"/><text x="27.7450%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (202 samples, 0.38%)</title><rect x="28.1170%" y="149" width="0.3796%" height="15" fill="rgb(232,18,1)"/><text x="28.3670%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (9 samples, 0.02%)</title><rect x="28.4796%" y="133" width="0.0169%" height="15" fill="rgb(215,41,42)"/><text x="28.7296%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (11 samples, 0.02%)</title><rect x="28.4965%" y="165" width="0.0207%" height="15" fill="rgb(224,123,36)"/><text x="28.7465%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="28.5924%" y="149" width="0.0113%" height="15" fill="rgb(240,125,3)"/><text x="28.8424%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (72 samples, 0.14%)</title><rect x="29.5958%" y="133" width="0.1353%" height="15" fill="rgb(205,98,50)"/><text x="29.8458%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (869 samples, 1.63%)</title><rect x="28.5172%" y="165" width="1.6329%" height="15" fill="rgb(205,185,37)"/><text x="28.7672%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (823 samples, 1.55%)</title><rect x="28.6036%" y="149" width="1.5465%" height="15" fill="rgb(238,207,15)"/><text x="28.8536%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (222 samples, 0.42%)</title><rect x="29.7330%" y="133" width="0.4172%" height="15" fill="rgb(213,199,42)"/><text x="29.9830%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (68 samples, 0.13%)</title><rect x="30.0224%" y="117" width="0.1278%" height="15" fill="rgb(235,201,11)"/><text x="30.2724%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (239 samples, 0.45%)</title><rect x="30.1501%" y="165" width="0.4491%" height="15" fill="rgb(207,46,11)"/><text x="30.4001%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (201 samples, 0.38%)</title><rect x="30.2215%" y="149" width="0.3777%" height="15" fill="rgb(241,35,35)"/><text x="30.4715%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (384 samples, 0.72%)</title><rect x="30.6162%" y="165" width="0.7216%" height="15" fill="rgb(243,32,47)"/><text x="30.8662%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (25 samples, 0.05%)</title><rect x="31.2908%" y="149" width="0.0470%" height="15" fill="rgb(247,202,23)"/><text x="31.5408%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2,226 samples, 4.18%)</title><rect x="27.2281%" y="181" width="4.1829%" height="15" fill="rgb(219,102,11)"/><text x="27.4781%" y="191.50">libsy..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (39 samples, 0.07%)</title><rect x="31.3377%" y="165" width="0.0733%" height="15" fill="rgb(243,110,44)"/><text x="31.5877%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.01%)</title><rect x="31.4110%" y="181" width="0.0132%" height="15" fill="rgb(222,74,54)"/><text x="31.6610%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (8 samples, 0.02%)</title><rect x="31.4242%" y="181" width="0.0150%" height="15" fill="rgb(216,99,12)"/><text x="31.6742%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2,437 samples, 4.58%)</title><rect x="26.8767%" y="197" width="4.5794%" height="15" fill="rgb(226,22,26)"/><text x="27.1267%" y="207.50">libsy..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.01%)</title><rect x="31.4430%" y="181" width="0.0132%" height="15" fill="rgb(217,163,10)"/><text x="31.6930%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (6 samples, 0.01%)</title><rect x="31.4561%" y="197" width="0.0113%" height="15" fill="rgb(213,25,53)"/><text x="31.7061%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (204 samples, 0.38%)</title><rect x="31.4674%" y="197" width="0.3833%" height="15" fill="rgb(252,105,26)"/><text x="31.7174%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (182 samples, 0.34%)</title><rect x="31.5087%" y="181" width="0.3420%" height="15" fill="rgb(220,39,43)"/><text x="31.7587%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2,788 samples, 5.24%)</title><rect x="26.6362%" y="213" width="5.2389%" height="15" fill="rgb(229,68,48)"/><text x="26.8862%" y="223.50">libsys..</text></g><g><title>libsystem_malloc.dylib`tiny_size (13 samples, 0.02%)</title><rect x="31.8507%" y="197" width="0.0244%" height="15" fill="rgb(252,8,32)"/><text x="32.1007%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.02%)</title><rect x="31.8752%" y="213" width="0.0150%" height="15" fill="rgb(223,20,43)"/><text x="32.1252%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (333 samples, 0.63%)</title><rect x="31.8902%" y="213" width="0.6257%" height="15" fill="rgb(229,81,49)"/><text x="32.1402%" y="223.50"></text></g><g><title>zuma`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4,432 samples, 8.33%)</title><rect x="24.2441%" y="229" width="8.3282%" height="15" fill="rgb(236,28,36)"/><text x="24.4941%" y="239.50">zuma`&lt;&amp;mut W..</text></g><g><title>zuma`__rdl_realloc (30 samples, 0.06%)</title><rect x="32.5159%" y="213" width="0.0564%" height="15" fill="rgb(249,185,26)"/><text x="32.7659%" y="223.50"></text></g><g><title>zuma`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (25 samples, 0.05%)</title><rect x="32.5723%" y="229" width="0.0470%" height="15" fill="rgb(249,174,33)"/><text x="32.8223%" y="239.50"></text></g><g><title>zuma`&lt;str as core::fmt::Display&gt;::fmt (25 samples, 0.05%)</title><rect x="32.6193%" y="229" width="0.0470%" height="15" fill="rgb(233,201,37)"/><text x="32.8693%" y="239.50"></text></g><g><title>zuma`DYLD-STUB$$memcpy (22 samples, 0.04%)</title><rect x="32.6663%" y="229" width="0.0413%" height="15" fill="rgb(221,78,26)"/><text x="32.9163%" y="239.50"></text></g><g><title>zuma`__rdl_alloc (12 samples, 0.02%)</title><rect x="32.7076%" y="229" width="0.0225%" height="15" fill="rgb(250,127,30)"/><text x="32.9576%" y="239.50"></text></g><g><title>zuma`__rdl_realloc (12 samples, 0.02%)</title><rect x="32.7301%" y="229" width="0.0225%" height="15" fill="rgb(230,49,44)"/><text x="32.9801%" y="239.50"></text></g><g><title>zuma`alloc::fmt::format (5,240 samples, 9.85%)</title><rect x="23.0998%" y="261" width="9.8465%" height="15" fill="rgb(229,67,23)"/><text x="23.3498%" y="271.50">zuma`alloc::fm..</text></g><g><title>zuma`core::fmt::write (4,868 samples, 9.15%)</title><rect x="23.7988%" y="245" width="9.1475%" height="15" fill="rgb(249,83,47)"/><text x="24.0488%" y="255.50">zuma`core::fm..</text></g><g><title>zuma`core::fmt::Formatter::pad (100 samples, 0.19%)</title><rect x="32.7583%" y="229" width="0.1879%" height="15" fill="rgb(215,43,3)"/><text x="33.0083%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (14 samples, 0.03%)</title><rect x="33.2225%" y="181" width="0.0263%" height="15" fill="rgb(238,154,13)"/><text x="33.4725%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (146 samples, 0.27%)</title><rect x="33.0402%" y="213" width="0.2743%" height="15" fill="rgb(219,56,2)"/><text x="33.2902%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (142 samples, 0.27%)</title><rect x="33.0477%" y="197" width="0.2668%" height="15" fill="rgb(233,0,4)"/><text x="33.2977%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (35 samples, 0.07%)</title><rect x="33.2488%" y="181" width="0.0658%" height="15" fill="rgb(235,30,7)"/><text x="33.4988%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.01%)</title><rect x="33.3014%" y="165" width="0.0132%" height="15" fill="rgb(250,79,13)"/><text x="33.5514%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (161 samples, 0.30%)</title><rect x="33.0176%" y="229" width="0.3025%" height="15" fill="rgb(211,146,34)"/><text x="33.2676%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (165 samples, 0.31%)</title><rect x="33.0120%" y="245" width="0.3101%" height="15" fill="rgb(228,22,38)"/><text x="33.2620%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (12 samples, 0.02%)</title><rect x="33.3709%" y="213" width="0.0225%" height="15" fill="rgb(235,168,5)"/><text x="33.6209%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (12 samples, 0.02%)</title><rect x="33.3935%" y="213" width="0.0225%" height="15" fill="rgb(221,155,16)"/><text x="33.6435%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (32 samples, 0.06%)</title><rect x="33.6659%" y="165" width="0.0601%" height="15" fill="rgb(215,215,53)"/><text x="33.9159%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (145 samples, 0.27%)</title><rect x="33.4574%" y="197" width="0.2725%" height="15" fill="rgb(223,4,10)"/><text x="33.7074%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (76 samples, 0.14%)</title><rect x="33.5870%" y="181" width="0.1428%" height="15" fill="rgb(234,103,6)"/><text x="33.8370%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (13 samples, 0.02%)</title><rect x="33.8557%" y="165" width="0.0244%" height="15" fill="rgb(227,97,0)"/><text x="34.1057%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (107 samples, 0.20%)</title><rect x="33.7336%" y="197" width="0.2011%" height="15" fill="rgb(234,150,53)"/><text x="33.9836%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (101 samples, 0.19%)</title><rect x="33.7449%" y="181" width="0.1898%" height="15" fill="rgb(228,201,54)"/><text x="33.9949%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (29 samples, 0.05%)</title><rect x="33.8802%" y="165" width="0.0545%" height="15" fill="rgb(222,22,37)"/><text x="34.1302%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (17 samples, 0.03%)</title><rect x="33.9346%" y="197" width="0.0319%" height="15" fill="rgb(237,53,32)"/><text x="34.1846%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (15 samples, 0.03%)</title><rect x="33.9384%" y="181" width="0.0282%" height="15" fill="rgb(233,25,53)"/><text x="34.1884%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (45 samples, 0.08%)</title><rect x="33.9685%" y="197" width="0.0846%" height="15" fill="rgb(210,40,34)"/><text x="34.2185%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (465 samples, 0.87%)</title><rect x="33.4198%" y="213" width="0.8738%" height="15" fill="rgb(241,220,44)"/><text x="33.6698%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (128 samples, 0.24%)</title><rect x="34.0530%" y="197" width="0.2405%" height="15" fill="rgb(235,28,35)"/><text x="34.3030%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (506 samples, 0.95%)</title><rect x="33.3578%" y="229" width="0.9508%" height="15" fill="rgb(210,56,17)"/><text x="33.6078%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (25 samples, 0.05%)</title><rect x="34.3105%" y="229" width="0.0470%" height="15" fill="rgb(224,130,29)"/><text x="34.5605%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (21 samples, 0.04%)</title><rect x="34.3180%" y="213" width="0.0395%" height="15" fill="rgb(235,212,8)"/><text x="34.5680%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (549 samples, 1.03%)</title><rect x="33.3296%" y="245" width="1.0316%" height="15" fill="rgb(223,33,50)"/><text x="33.5796%" y="255.50"></text></g><g><title>zuma`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (759 samples, 1.43%)</title><rect x="32.9462%" y="261" width="1.4262%" height="15" fill="rgb(219,149,13)"/><text x="33.1962%" y="271.50"></text></g><g><title>zuma`__rdl_realloc (6 samples, 0.01%)</title><rect x="34.3612%" y="245" width="0.0113%" height="15" fill="rgb(250,156,29)"/><text x="34.6112%" y="255.50"></text></g><g><title>zuma`alloc::slice::merge_sort (288 samples, 0.54%)</title><rect x="34.3725%" y="261" width="0.5412%" height="15" fill="rgb(216,193,19)"/><text x="34.6225%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (70 samples, 0.13%)</title><rect x="34.7821%" y="245" width="0.1315%" height="15" fill="rgb(216,135,14)"/><text x="35.0321%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (72 samples, 0.14%)</title><rect x="34.9606%" y="213" width="0.1353%" height="15" fill="rgb(241,47,5)"/><text x="35.2106%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (66 samples, 0.12%)</title><rect x="34.9719%" y="197" width="0.1240%" height="15" fill="rgb(233,42,35)"/><text x="35.2219%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (81 samples, 0.15%)</title><rect x="34.9475%" y="229" width="0.1522%" height="15" fill="rgb(231,13,6)"/><text x="35.1975%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (88 samples, 0.17%)</title><rect x="34.9362%" y="245" width="0.1654%" height="15" fill="rgb(207,181,40)"/><text x="35.1862%" y="255.50"></text></g><g><title>zuma`alloc::str::_&lt;impl str&gt;::repeat (117 samples, 0.22%)</title><rect x="34.9137%" y="261" width="0.2199%" height="15" fill="rgb(254,173,49)"/><text x="35.1637%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.03%)</title><rect x="35.1016%" y="245" width="0.0319%" height="15" fill="rgb(221,1,38)"/><text x="35.3516%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.01%)</title><rect x="35.2970%" y="213" width="0.0132%" height="15" fill="rgb(206,124,46)"/><text x="35.5470%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (13 samples, 0.02%)</title><rect x="35.4624%" y="181" width="0.0244%" height="15" fill="rgb(249,21,11)"/><text x="35.7124%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (157 samples, 0.30%)</title><rect x="35.2895%" y="229" width="0.2950%" height="15" fill="rgb(222,201,40)"/><text x="35.5395%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (146 samples, 0.27%)</title><rect x="35.3101%" y="213" width="0.2743%" height="15" fill="rgb(235,61,29)"/><text x="35.5601%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (138 samples, 0.26%)</title><rect x="35.3252%" y="197" width="0.2593%" height="15" fill="rgb(219,207,3)"/><text x="35.5752%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (52 samples, 0.10%)</title><rect x="35.4868%" y="181" width="0.0977%" height="15" fill="rgb(222,56,46)"/><text x="35.7368%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (18 samples, 0.03%)</title><rect x="35.5507%" y="165" width="0.0338%" height="15" fill="rgb(239,76,54)"/><text x="35.8007%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (163 samples, 0.31%)</title><rect x="35.2801%" y="245" width="0.3063%" height="15" fill="rgb(231,124,27)"/><text x="35.5301%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (41 samples, 0.08%)</title><rect x="35.5920%" y="245" width="0.0770%" height="15" fill="rgb(249,195,6)"/><text x="35.8420%" y="255.50"></text></g><g><title>zuma`alloc::str::join_generic_copy (288 samples, 0.54%)</title><rect x="35.1335%" y="261" width="0.5412%" height="15" fill="rgb(237,174,47)"/><text x="35.3835%" y="271.50"></text></g><g><title>zuma`zumalib::code_generation::generate (18,349 samples, 34.48%)</title><rect x="1.2064%" y="277" width="34.4796%" height="15" fill="rgb(206,201,31)"/><text x="1.4564%" y="287.50">zuma`zumalib::code_generation::generate</text></g><g><title>zuma`core::fmt::write (6 samples, 0.01%)</title><rect x="35.6747%" y="261" width="0.0113%" height="15" fill="rgb(231,57,52)"/><text x="35.9247%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="35.6916%" y="245" width="0.0150%" height="15" fill="rgb(248,177,22)"/><text x="35.9416%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="35.7066%" y="245" width="0.0132%" height="15" fill="rgb(215,211,37)"/><text x="35.9566%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (11 samples, 0.02%)</title><rect x="35.7217%" y="245" width="0.0207%" height="15" fill="rgb(241,128,51)"/><text x="35.9717%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (6 samples, 0.01%)</title><rect x="35.7668%" y="197" width="0.0113%" height="15" fill="rgb(227,165,31)"/><text x="36.0168%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (6 samples, 0.01%)</title><rect x="35.7668%" y="181" width="0.0113%" height="15" fill="rgb(228,167,24)"/><text x="36.0168%" y="191.50"></text></g><g><title>zuma`&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="35.7668%" y="213" width="0.0132%" height="15" fill="rgb(228,143,12)"/><text x="36.0168%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (31 samples, 0.06%)</title><rect x="35.8231%" y="133" width="0.0583%" height="15" fill="rgb(249,149,8)"/><text x="36.0731%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (30 samples, 0.06%)</title><rect x="35.8250%" y="117" width="0.0564%" height="15" fill="rgb(243,35,44)"/><text x="36.0750%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (29 samples, 0.05%)</title><rect x="35.8269%" y="101" width="0.0545%" height="15" fill="rgb(246,89,9)"/><text x="36.0769%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (28 samples, 0.05%)</title><rect x="35.8288%" y="85" width="0.0526%" height="15" fill="rgb(233,213,13)"/><text x="36.0788%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.02%)</title><rect x="35.8607%" y="69" width="0.0207%" height="15" fill="rgb(233,141,41)"/><text x="36.1107%" y="79.50"></text></g><g><title>zuma`&lt;alloc::string::String as core::clone::Clone&gt;::clone (39 samples, 0.07%)</title><rect x="35.8175%" y="149" width="0.0733%" height="15" fill="rgb(239,167,4)"/><text x="36.0675%" y="159.50"></text></g><g><title>zuma`&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (60 samples, 0.11%)</title><rect x="35.7987%" y="181" width="0.1127%" height="15" fill="rgb(209,217,16)"/><text x="36.0487%" y="191.50"></text></g><g><title>zuma`&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (54 samples, 0.10%)</title><rect x="35.8100%" y="165" width="0.1015%" height="15" fill="rgb(219,88,35)"/><text x="36.0600%" y="175.50"></text></g><g><title>zuma`&lt;zumalib::parsing::ast::Value as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="35.8908%" y="149" width="0.0207%" height="15" fill="rgb(220,193,23)"/><text x="36.1408%" y="159.50"></text></g><g><title>zuma`&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="35.9002%" y="133" width="0.0113%" height="15" fill="rgb(230,90,52)"/><text x="36.1502%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (6 samples, 0.01%)</title><rect x="35.9002%" y="117" width="0.0113%" height="15" fill="rgb(252,106,19)"/><text x="36.1502%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc (6 samples, 0.01%)</title><rect x="35.9171%" y="165" width="0.0113%" height="15" fill="rgb(206,74,20)"/><text x="36.1671%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (6 samples, 0.01%)</title><rect x="35.9171%" y="149" width="0.0113%" height="15" fill="rgb(230,138,44)"/><text x="36.1671%" y="159.50"></text></g><g><title>zuma`&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="35.9284%" y="165" width="0.0113%" height="15" fill="rgb(235,182,43)"/><text x="36.1784%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (6 samples, 0.01%)</title><rect x="35.9284%" y="149" width="0.0113%" height="15" fill="rgb(242,16,51)"/><text x="36.1784%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (6 samples, 0.01%)</title><rect x="35.9284%" y="133" width="0.0113%" height="15" fill="rgb(248,9,4)"/><text x="36.1784%" y="143.50"></text></g><g><title>zuma`&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (103 samples, 0.19%)</title><rect x="35.7499%" y="245" width="0.1935%" height="15" fill="rgb(210,31,22)"/><text x="35.9999%" y="255.50"></text></g><g><title>zuma`core::iter::traits::iterator::Iterator::fold (98 samples, 0.18%)</title><rect x="35.7592%" y="229" width="0.1842%" height="15" fill="rgb(239,54,39)"/><text x="36.0092%" y="239.50"></text></g><g><title>zuma`&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (87 samples, 0.16%)</title><rect x="35.7799%" y="213" width="0.1635%" height="15" fill="rgb(230,99,41)"/><text x="36.0299%" y="223.50"></text></g><g><title>zuma`core::iter::traits::iterator::Iterator::fold (82 samples, 0.15%)</title><rect x="35.7893%" y="197" width="0.1541%" height="15" fill="rgb(253,106,12)"/><text x="36.0393%" y="207.50"></text></g><g><title>zuma`&lt;zumalib::parsing::ast::Value as core::clone::Clone&gt;::clone (17 samples, 0.03%)</title><rect x="35.9115%" y="181" width="0.0319%" height="15" fill="rgb(213,46,41)"/><text x="36.1615%" y="191.50"></text></g><g><title>zuma`&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (17 samples, 0.03%)</title><rect x="35.9434%" y="245" width="0.0319%" height="15" fill="rgb(215,133,35)"/><text x="36.1934%" y="255.50"></text></g><g><title>zuma`&lt;zumalib::parsing::ast::Value as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="35.9584%" y="229" width="0.0169%" height="15" fill="rgb(213,28,5)"/><text x="36.2084%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.01%)</title><rect x="35.9622%" y="213" width="0.0132%" height="15" fill="rgb(215,77,49)"/><text x="36.2122%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (7 samples, 0.01%)</title><rect x="35.9622%" y="197" width="0.0132%" height="15" fill="rgb(248,100,22)"/><text x="36.2122%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="35.9641%" y="181" width="0.0113%" height="15" fill="rgb(208,67,9)"/><text x="36.2141%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="35.9847%" y="229" width="0.0188%" height="15" fill="rgb(219,133,21)"/><text x="36.2347%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="35.9923%" y="213" width="0.0113%" height="15" fill="rgb(246,46,29)"/><text x="36.2423%" y="223.50"></text></g><g><title>zuma`&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.04%)</title><rect x="35.9753%" y="245" width="0.0432%" height="15" fill="rgb(246,185,52)"/><text x="36.2253%" y="255.50"></text></g><g><title>zuma`core::ptr::drop_in_place (7 samples, 0.01%)</title><rect x="36.0054%" y="229" width="0.0132%" height="15" fill="rgb(252,136,11)"/><text x="36.2554%" y="239.50"></text></g><g><title>zuma`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="36.0336%" y="245" width="0.0113%" height="15" fill="rgb(219,138,53)"/><text x="36.2836%" y="255.50"></text></g><g><title>zuma`hashbrown::map::HashMap&lt;K,V,S&gt;::remove (7 samples, 0.01%)</title><rect x="36.0674%" y="245" width="0.0132%" height="15" fill="rgb(211,51,23)"/><text x="36.3174%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (13 samples, 0.02%)</title><rect x="36.1708%" y="229" width="0.0244%" height="15" fill="rgb(247,221,28)"/><text x="36.4208%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (85 samples, 0.16%)</title><rect x="36.2986%" y="213" width="0.1597%" height="15" fill="rgb(251,222,45)"/><text x="36.5486%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (75 samples, 0.14%)</title><rect x="36.3173%" y="197" width="0.1409%" height="15" fill="rgb(217,162,53)"/><text x="36.5673%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (146 samples, 0.27%)</title><rect x="36.1952%" y="229" width="0.2743%" height="15" fill="rgb(229,93,14)"/><text x="36.4452%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (6 samples, 0.01%)</title><rect x="36.4583%" y="213" width="0.0113%" height="15" fill="rgb(209,67,49)"/><text x="36.7083%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (104 samples, 0.20%)</title><rect x="37.0483%" y="197" width="0.1954%" height="15" fill="rgb(213,87,29)"/><text x="37.2983%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (439 samples, 0.82%)</title><rect x="36.4695%" y="229" width="0.8249%" height="15" fill="rgb(205,151,52)"/><text x="36.7195%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (262 samples, 0.49%)</title><rect x="36.8021%" y="213" width="0.4923%" height="15" fill="rgb(253,215,39)"/><text x="37.0521%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (27 samples, 0.05%)</title><rect x="37.2437%" y="197" width="0.0507%" height="15" fill="rgb(221,220,41)"/><text x="37.4937%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (125 samples, 0.23%)</title><rect x="37.3151%" y="213" width="0.2349%" height="15" fill="rgb(218,133,21)"/><text x="37.5651%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (114 samples, 0.21%)</title><rect x="37.3358%" y="197" width="0.2142%" height="15" fill="rgb(221,193,43)"/><text x="37.5858%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (109 samples, 0.20%)</title><rect x="37.3452%" y="181" width="0.2048%" height="15" fill="rgb(240,128,52)"/><text x="37.5952%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (137 samples, 0.26%)</title><rect x="37.2945%" y="229" width="0.2574%" height="15" fill="rgb(253,114,12)"/><text x="37.5445%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (30 samples, 0.06%)</title><rect x="37.5519%" y="229" width="0.0564%" height="15" fill="rgb(215,223,47)"/><text x="37.8019%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.03%)</title><rect x="37.6139%" y="229" width="0.0263%" height="15" fill="rgb(248,225,23)"/><text x="37.8639%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (150 samples, 0.28%)</title><rect x="37.6910%" y="181" width="0.2819%" height="15" fill="rgb(250,108,0)"/><text x="37.9410%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (146 samples, 0.27%)</title><rect x="37.6985%" y="165" width="0.2743%" height="15" fill="rgb(228,208,7)"/><text x="37.9485%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (47 samples, 0.09%)</title><rect x="37.8845%" y="149" width="0.0883%" height="15" fill="rgb(244,45,10)"/><text x="38.1345%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (18 samples, 0.03%)</title><rect x="37.9390%" y="133" width="0.0338%" height="15" fill="rgb(207,125,25)"/><text x="38.1890%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (159 samples, 0.30%)</title><rect x="37.6759%" y="197" width="0.2988%" height="15" fill="rgb(210,195,18)"/><text x="37.9259%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (172 samples, 0.32%)</title><rect x="37.6571%" y="213" width="0.3232%" height="15" fill="rgb(249,80,12)"/><text x="37.9071%" y="223.50"></text></g><g><title>zuma`&lt;alloc::string::String as core::clone::Clone&gt;::clone (186 samples, 0.35%)</title><rect x="37.6402%" y="229" width="0.3495%" height="15" fill="rgb(221,65,9)"/><text x="37.8902%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.01%)</title><rect x="38.0367%" y="181" width="0.0113%" height="15" fill="rgb(235,49,36)"/><text x="38.2867%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (18 samples, 0.03%)</title><rect x="38.2303%" y="149" width="0.0338%" height="15" fill="rgb(225,32,20)"/><text x="38.4803%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (164 samples, 0.31%)</title><rect x="38.0217%" y="197" width="0.3082%" height="15" fill="rgb(215,141,46)"/><text x="38.2717%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (150 samples, 0.28%)</title><rect x="38.0480%" y="181" width="0.2819%" height="15" fill="rgb(250,160,47)"/><text x="38.2980%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (143 samples, 0.27%)</title><rect x="38.0611%" y="165" width="0.2687%" height="15" fill="rgb(216,222,40)"/><text x="38.3111%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (33 samples, 0.06%)</title><rect x="38.2678%" y="149" width="0.0620%" height="15" fill="rgb(234,217,39)"/><text x="38.5178%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.03%)</title><rect x="38.3035%" y="133" width="0.0263%" height="15" fill="rgb(207,178,40)"/><text x="38.5535%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (171 samples, 0.32%)</title><rect x="38.0123%" y="213" width="0.3213%" height="15" fill="rgb(221,136,13)"/><text x="38.2623%" y="223.50"></text></g><g><title>zuma`&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="38.3411%" y="213" width="0.0113%" height="15" fill="rgb(249,199,10)"/><text x="38.5911%" y="223.50"></text></g><g><title>zuma`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.02%)</title><rect x="38.3562%" y="213" width="0.0169%" height="15" fill="rgb(249,222,13)"/><text x="38.6062%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (10 samples, 0.02%)</title><rect x="38.4839%" y="197" width="0.0188%" height="15" fill="rgb(244,185,38)"/><text x="38.7339%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (237 samples, 0.45%)</title><rect x="38.6042%" y="149" width="0.4453%" height="15" fill="rgb(236,202,9)"/><text x="38.8542%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (226 samples, 0.42%)</title><rect x="38.6249%" y="133" width="0.4247%" height="15" fill="rgb(250,229,37)"/><text x="38.8749%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (52 samples, 0.10%)</title><rect x="38.9518%" y="117" width="0.0977%" height="15" fill="rgb(206,174,23)"/><text x="39.2018%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (259 samples, 0.49%)</title><rect x="38.5647%" y="165" width="0.4867%" height="15" fill="rgb(211,33,43)"/><text x="38.8147%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (274 samples, 0.51%)</title><rect x="38.5403%" y="181" width="0.5149%" height="15" fill="rgb(245,58,50)"/><text x="38.7903%" y="191.50"></text></g><g><title>zuma`&lt;alloc::string::String as core::clone::Clone&gt;::clone (308 samples, 0.58%)</title><rect x="38.5065%" y="197" width="0.5788%" height="15" fill="rgb(244,68,36)"/><text x="38.7565%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="39.0608%" y="181" width="0.0244%" height="15" fill="rgb(232,229,15)"/><text x="39.3108%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (21 samples, 0.04%)</title><rect x="39.3164%" y="117" width="0.0395%" height="15" fill="rgb(254,30,23)"/><text x="39.5664%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (165 samples, 0.31%)</title><rect x="39.1379%" y="149" width="0.3101%" height="15" fill="rgb(235,160,14)"/><text x="39.3879%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (160 samples, 0.30%)</title><rect x="39.1473%" y="133" width="0.3007%" height="15" fill="rgb(212,155,44)"/><text x="39.3973%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (49 samples, 0.09%)</title><rect x="39.3558%" y="117" width="0.0921%" height="15" fill="rgb(226,2,50)"/><text x="39.6058%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc (180 samples, 0.34%)</title><rect x="39.1134%" y="181" width="0.3382%" height="15" fill="rgb(234,177,6)"/><text x="39.3634%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (177 samples, 0.33%)</title><rect x="39.1191%" y="165" width="0.3326%" height="15" fill="rgb(217,24,9)"/><text x="39.3691%" y="175.50"></text></g><g><title>zuma`&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="39.4536%" y="181" width="0.0113%" height="15" fill="rgb(220,13,46)"/><text x="39.7036%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (14 samples, 0.03%)</title><rect x="39.9308%" y="165" width="0.0263%" height="15" fill="rgb(239,221,27)"/><text x="40.1808%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.02%)</title><rect x="39.9572%" y="165" width="0.0188%" height="15" fill="rgb(222,198,25)"/><text x="40.2072%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (17 samples, 0.03%)</title><rect x="40.1676%" y="133" width="0.0319%" height="15" fill="rgb(211,99,13)"/><text x="40.4176%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (28 samples, 0.05%)</title><rect x="40.3142%" y="117" width="0.0526%" height="15" fill="rgb(232,111,31)"/><text x="40.5642%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.02%)</title><rect x="41.8851%" y="85" width="0.0150%" height="15" fill="rgb(245,82,37)"/><text x="42.1351%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,287 samples, 2.42%)</title><rect x="40.3668%" y="117" width="2.4184%" height="15" fill="rgb(227,149,46)"/><text x="40.6168%" y="127.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1,228 samples, 2.31%)</title><rect x="40.4777%" y="101" width="2.3075%" height="15" fill="rgb(218,36,50)"/><text x="40.7277%" y="111.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (471 samples, 0.89%)</title><rect x="41.9001%" y="85" width="0.8851%" height="15" fill="rgb(226,80,48)"/><text x="42.1501%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (181 samples, 0.34%)</title><rect x="42.4451%" y="69" width="0.3401%" height="15" fill="rgb(238,224,15)"/><text x="42.6951%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1,381 samples, 2.60%)</title><rect x="40.1996%" y="133" width="2.5950%" height="15" fill="rgb(241,136,10)"/><text x="40.4496%" y="143.50">li..</text></g><g><title>libsystem_malloc.dylib`malloc (1,436 samples, 2.70%)</title><rect x="40.1150%" y="149" width="2.6984%" height="15" fill="rgb(208,32,45)"/><text x="40.3650%" y="159.50">li..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="42.7946%" y="133" width="0.0188%" height="15" fill="rgb(207,135,9)"/><text x="43.0446%" y="143.50"></text></g><g><title>zuma`&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,566 samples, 2.94%)</title><rect x="39.9759%" y="165" width="2.9427%" height="15" fill="rgb(206,86,44)"/><text x="40.2259%" y="175.50">zu..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (51 samples, 0.10%)</title><rect x="42.8228%" y="149" width="0.0958%" height="15" fill="rgb(245,177,15)"/><text x="43.0728%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.01%)</title><rect x="43.0126%" y="133" width="0.0113%" height="15" fill="rgb(206,64,50)"/><text x="43.2626%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.01%)</title><rect x="43.0464%" y="117" width="0.0132%" height="15" fill="rgb(234,36,40)"/><text x="43.2964%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (36 samples, 0.07%)</title><rect x="43.4072%" y="85" width="0.0676%" height="15" fill="rgb(213,64,8)"/><text x="43.6572%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (299 samples, 0.56%)</title><rect x="43.0595%" y="117" width="0.5619%" height="15" fill="rgb(210,75,36)"/><text x="43.3095%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (288 samples, 0.54%)</title><rect x="43.0802%" y="101" width="0.5412%" height="15" fill="rgb(229,88,21)"/><text x="43.3302%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (76 samples, 0.14%)</title><rect x="43.4786%" y="85" width="0.1428%" height="15" fill="rgb(252,204,47)"/><text x="43.7286%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (32 samples, 0.06%)</title><rect x="43.5613%" y="69" width="0.0601%" height="15" fill="rgb(208,77,27)"/><text x="43.8113%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (320 samples, 0.60%)</title><rect x="43.0238%" y="133" width="0.6013%" height="15" fill="rgb(221,76,26)"/><text x="43.2738%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (345 samples, 0.65%)</title><rect x="42.9863%" y="149" width="0.6483%" height="15" fill="rgb(225,139,18)"/><text x="43.2363%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (10 samples, 0.02%)</title><rect x="43.7078%" y="101" width="0.0188%" height="15" fill="rgb(230,137,11)"/><text x="43.9578%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (287 samples, 0.54%)</title><rect x="43.7266%" y="101" width="0.5393%" height="15" fill="rgb(212,28,1)"/><text x="43.9766%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (272 samples, 0.51%)</title><rect x="43.7548%" y="85" width="0.5111%" height="15" fill="rgb(248,164,17)"/><text x="44.0048%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (88 samples, 0.17%)</title><rect x="44.1006%" y="69" width="0.1654%" height="15" fill="rgb(222,171,42)"/><text x="44.3506%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (28 samples, 0.05%)</title><rect x="44.2133%" y="53" width="0.0526%" height="15" fill="rgb(243,84,45)"/><text x="44.4633%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (310 samples, 0.58%)</title><rect x="43.6853%" y="117" width="0.5825%" height="15" fill="rgb(252,49,23)"/><text x="43.9353%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc (320 samples, 0.60%)</title><rect x="43.6721%" y="133" width="0.6013%" height="15" fill="rgb(215,19,7)"/><text x="43.9221%" y="143.50"></text></g><g><title>zuma`&lt;alloc::string::String as core::clone::Clone&gt;::clone (347 samples, 0.65%)</title><rect x="43.6402%" y="149" width="0.6520%" height="15" fill="rgb(238,81,41)"/><text x="43.8902%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.02%)</title><rect x="44.2753%" y="133" width="0.0169%" height="15" fill="rgb(210,199,37)"/><text x="44.5253%" y="143.50"></text></g><g><title>zuma`&lt;zumalib::parsing::ast::Value as core::clone::Clone&gt;::clone (736 samples, 1.38%)</title><rect x="42.9186%" y="165" width="1.3830%" height="15" fill="rgb(244,192,49)"/><text x="43.1686%" y="175.50"></text></g><g><title>zuma`DYLD-STUB$$memcpy (11 samples, 0.02%)</title><rect x="44.3016%" y="165" width="0.0207%" height="15" fill="rgb(226,211,11)"/><text x="44.5516%" y="175.50"></text></g><g><title>zuma`__rdl_alloc (17 samples, 0.03%)</title><rect x="44.3223%" y="165" width="0.0319%" height="15" fill="rgb(236,162,54)"/><text x="44.5723%" y="175.50"></text></g><g><title>zuma`&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,608 samples, 4.90%)</title><rect x="39.4648%" y="181" width="4.9007%" height="15" fill="rgb(220,229,9)"/><text x="39.7148%" y="191.50">zuma`&lt;..</text></g><g><title>zuma`__rust_alloc (6 samples, 0.01%)</title><rect x="44.3542%" y="165" width="0.0113%" height="15" fill="rgb(250,87,22)"/><text x="44.6042%" y="175.50"></text></g><g><title>zuma`&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2,818 samples, 5.30%)</title><rect x="39.0853%" y="197" width="5.2953%" height="15" fill="rgb(239,43,17)"/><text x="39.3353%" y="207.50">zuma`&lt;..</text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (10 samples, 0.02%)</title><rect x="44.5779%" y="149" width="0.0188%" height="15" fill="rgb(231,177,25)"/><text x="44.8279%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (42 samples, 0.08%)</title><rect x="45.1529%" y="117" width="0.0789%" height="15" fill="rgb(219,179,1)"/><text x="45.4029%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (416 samples, 0.78%)</title><rect x="44.5967%" y="149" width="0.7817%" height="15" fill="rgb(238,219,53)"/><text x="44.8467%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (398 samples, 0.75%)</title><rect x="44.6305%" y="133" width="0.7479%" height="15" fill="rgb(232,167,36)"/><text x="44.8805%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (78 samples, 0.15%)</title><rect x="45.2318%" y="117" width="0.1466%" height="15" fill="rgb(244,19,51)"/><text x="45.4818%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (455 samples, 0.85%)</title><rect x="44.5252%" y="165" width="0.8550%" height="15" fill="rgb(224,6,22)"/><text x="44.7752%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (478 samples, 0.90%)</title><rect x="44.4933%" y="181" width="0.8982%" height="15" fill="rgb(224,145,5)"/><text x="44.7433%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="45.3802%" y="165" width="0.0113%" height="15" fill="rgb(234,130,49)"/><text x="45.6302%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (342 samples, 0.64%)</title><rect x="45.4817%" y="133" width="0.6427%" height="15" fill="rgb(254,6,2)"/><text x="45.7317%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (320 samples, 0.60%)</title><rect x="45.5230%" y="117" width="0.6013%" height="15" fill="rgb(208,96,46)"/><text x="45.7730%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (135 samples, 0.25%)</title><rect x="45.8707%" y="101" width="0.2537%" height="15" fill="rgb(239,3,39)"/><text x="46.1207%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (42 samples, 0.08%)</title><rect x="46.0454%" y="85" width="0.0789%" height="15" fill="rgb(233,210,1)"/><text x="46.2954%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (361 samples, 0.68%)</title><rect x="45.4516%" y="149" width="0.6784%" height="15" fill="rgb(244,137,37)"/><text x="45.7016%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (379 samples, 0.71%)</title><rect x="45.4235%" y="165" width="0.7122%" height="15" fill="rgb(240,136,2)"/><text x="45.6735%" y="175.50"></text></g><g><title>zuma`&lt;alloc::string::String as core::clone::Clone&gt;::clone (406 samples, 0.76%)</title><rect x="45.3990%" y="181" width="0.7629%" height="15" fill="rgb(239,18,37)"/><text x="45.6490%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.03%)</title><rect x="46.1356%" y="165" width="0.0263%" height="15" fill="rgb(218,185,22)"/><text x="46.3856%" y="175.50"></text></g><g><title>zuma`&lt;zumalib::parsing::ast::Value as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="46.1619%" y="181" width="0.0150%" height="15" fill="rgb(225,218,4)"/><text x="46.4119%" y="191.50"></text></g><g><title>zuma`&lt;zumalib::parsing::ast::Value as core::clone::Clone&gt;::clone (960 samples, 1.80%)</title><rect x="44.3843%" y="197" width="1.8039%" height="15" fill="rgb(230,182,32)"/><text x="44.6343%" y="207.50">z..</text></g><g><title>zuma`__rdl_alloc (13 samples, 0.02%)</title><rect x="46.1920%" y="197" width="0.0244%" height="15" fill="rgb(242,56,43)"/><text x="46.4420%" y="207.50"></text></g><g><title>zuma`&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4,384 samples, 8.24%)</title><rect x="37.9897%" y="229" width="8.2380%" height="15" fill="rgb(233,99,24)"/><text x="38.2397%" y="239.50">zuma`&lt;alloc..</text></g><g><title>zuma`core::iter::traits::iterator::Iterator::fold (4,180 samples, 7.85%)</title><rect x="38.3731%" y="213" width="7.8546%" height="15" fill="rgb(234,209,42)"/><text x="38.6231%" y="223.50">zuma`core::..</text></g><g><title>zuma`&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="46.2277%" y="229" width="0.0169%" height="15" fill="rgb(227,7,12)"/><text x="46.4777%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (45 samples, 0.08%)</title><rect x="46.3048%" y="213" width="0.0846%" height="15" fill="rgb(245,203,43)"/><text x="46.5548%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (31 samples, 0.06%)</title><rect x="46.3311%" y="197" width="0.0583%" height="15" fill="rgb(238,205,33)"/><text x="46.5811%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (27 samples, 0.05%)</title><rect x="46.3386%" y="181" width="0.0507%" height="15" fill="rgb(231,56,7)"/><text x="46.5886%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (123 samples, 0.23%)</title><rect x="46.3893%" y="213" width="0.2311%" height="15" fill="rgb(244,186,29)"/><text x="46.6393%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (64 samples, 0.12%)</title><rect x="46.5002%" y="197" width="0.1203%" height="15" fill="rgb(234,111,31)"/><text x="46.7502%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (33 samples, 0.06%)</title><rect x="46.5584%" y="181" width="0.0620%" height="15" fill="rgb(241,149,10)"/><text x="46.8084%" y="191.50"></text></g><g><title>zuma`&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (202 samples, 0.38%)</title><rect x="46.2446%" y="229" width="0.3796%" height="15" fill="rgb(249,206,44)"/><text x="46.4946%" y="239.50"></text></g><g><title>zuma`__rdl_alloc (6 samples, 0.01%)</title><rect x="46.6355%" y="229" width="0.0113%" height="15" fill="rgb(251,153,30)"/><text x="46.8855%" y="239.50"></text></g><g><title>zuma`__rdl_dealloc (11 samples, 0.02%)</title><rect x="46.6467%" y="229" width="0.0207%" height="15" fill="rgb(239,152,38)"/><text x="46.8967%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.01%)</title><rect x="46.7651%" y="181" width="0.0132%" height="15" fill="rgb(249,139,47)"/><text x="47.0151%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (19 samples, 0.04%)</title><rect x="46.9756%" y="149" width="0.0357%" height="15" fill="rgb(244,64,35)"/><text x="47.2256%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (164 samples, 0.31%)</title><rect x="46.7783%" y="181" width="0.3082%" height="15" fill="rgb(216,46,15)"/><text x="47.0283%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (156 samples, 0.29%)</title><rect x="46.7933%" y="165" width="0.2931%" height="15" fill="rgb(250,74,19)"/><text x="47.0433%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (40 samples, 0.08%)</title><rect x="47.0113%" y="149" width="0.0752%" height="15" fill="rgb(249,42,33)"/><text x="47.2613%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.02%)</title><rect x="47.0714%" y="133" width="0.0150%" height="15" fill="rgb(242,149,17)"/><text x="47.3214%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (183 samples, 0.34%)</title><rect x="46.7445%" y="197" width="0.3439%" height="15" fill="rgb(244,29,21)"/><text x="46.9945%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (190 samples, 0.36%)</title><rect x="46.7351%" y="213" width="0.3570%" height="15" fill="rgb(220,130,37)"/><text x="46.9851%" y="223.50"></text></g><g><title>zuma`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (221 samples, 0.42%)</title><rect x="46.6787%" y="229" width="0.4153%" height="15" fill="rgb(211,67,2)"/><text x="46.9287%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="47.1090%" y="213" width="0.0150%" height="15" fill="rgb(235,68,52)"/><text x="47.3590%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.02%)</title><rect x="47.1090%" y="197" width="0.0150%" height="15" fill="rgb(246,142,3)"/><text x="47.3590%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.01%)</title><rect x="47.1109%" y="181" width="0.0132%" height="15" fill="rgb(241,25,7)"/><text x="47.3609%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="47.1560%" y="181" width="0.0113%" height="15" fill="rgb(242,119,39)"/><text x="47.4060%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (27 samples, 0.05%)</title><rect x="47.1240%" y="213" width="0.0507%" height="15" fill="rgb(241,98,45)"/><text x="47.3740%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (19 samples, 0.04%)</title><rect x="47.1391%" y="197" width="0.0357%" height="15" fill="rgb(254,28,30)"/><text x="47.3891%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="47.1823%" y="197" width="0.0113%" height="15" fill="rgb(241,142,54)"/><text x="47.4323%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.02%)</title><rect x="47.1936%" y="197" width="0.0225%" height="15" fill="rgb(222,85,15)"/><text x="47.4436%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.02%)</title><rect x="47.1992%" y="181" width="0.0169%" height="15" fill="rgb(210,85,47)"/><text x="47.4492%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="47.2048%" y="165" width="0.0113%" height="15" fill="rgb(224,206,25)"/><text x="47.4548%" y="175.50"></text></g><g><title>zuma`core::ptr::drop_in_place (64 samples, 0.12%)</title><rect x="47.0977%" y="229" width="0.1203%" height="15" fill="rgb(243,201,19)"/><text x="47.3477%" y="239.50"></text></g><g><title>zuma`core::ptr::drop_in_place (20 samples, 0.04%)</title><rect x="47.1804%" y="213" width="0.0376%" height="15" fill="rgb(236,59,4)"/><text x="47.4304%" y="223.50"></text></g><g><title>zuma`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (22 samples, 0.04%)</title><rect x="47.3608%" y="213" width="0.0413%" height="15" fill="rgb(254,179,45)"/><text x="47.6108%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.01%)</title><rect x="47.4999%" y="165" width="0.0132%" height="15" fill="rgb(226,14,10)"/><text x="47.7499%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (11 samples, 0.02%)</title><rect x="47.7047%" y="133" width="0.0207%" height="15" fill="rgb(244,27,41)"/><text x="47.9547%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (156 samples, 0.29%)</title><rect x="47.4754%" y="197" width="0.2931%" height="15" fill="rgb(235,35,32)"/><text x="47.7254%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (152 samples, 0.29%)</title><rect x="47.4829%" y="181" width="0.2856%" height="15" fill="rgb(218,68,31)"/><text x="47.7329%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (136 samples, 0.26%)</title><rect x="47.5130%" y="165" width="0.2556%" height="15" fill="rgb(207,120,37)"/><text x="47.7630%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (126 samples, 0.24%)</title><rect x="47.5318%" y="149" width="0.2368%" height="15" fill="rgb(227,98,0)"/><text x="47.7818%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (23 samples, 0.04%)</title><rect x="47.7254%" y="133" width="0.0432%" height="15" fill="rgb(207,7,3)"/><text x="47.9754%" y="143.50"></text></g><g><title>zuma`hashbrown::map::HashMap&lt;K,V,S&gt;::insert (298 samples, 0.56%)</title><rect x="47.2180%" y="229" width="0.5600%" height="15" fill="rgb(206,98,19)"/><text x="47.4680%" y="239.50"></text></g><g><title>zuma`hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (198 samples, 0.37%)</title><rect x="47.4059%" y="213" width="0.3721%" height="15" fill="rgb(217,5,26)"/><text x="47.6559%" y="223.50"></text></g><g><title>zuma`hashbrown::map::HashMap&lt;K,V,S&gt;::remove (61 samples, 0.11%)</title><rect x="47.7780%" y="229" width="0.1146%" height="15" fill="rgb(235,190,38)"/><text x="48.0280%" y="239.50"></text></g><g><title>zuma`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (25 samples, 0.05%)</title><rect x="47.8456%" y="213" width="0.0470%" height="15" fill="rgb(247,86,24)"/><text x="48.0956%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="48.3022%" y="213" width="0.0207%" height="15" fill="rgb(205,101,16)"/><text x="48.5522%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (51 samples, 0.10%)</title><rect x="48.3229%" y="213" width="0.0958%" height="15" fill="rgb(246,168,33)"/><text x="48.5729%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (205 samples, 0.39%)</title><rect x="48.6705%" y="197" width="0.3852%" height="15" fill="rgb(231,114,1)"/><text x="48.9205%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (187 samples, 0.35%)</title><rect x="48.7044%" y="181" width="0.3514%" height="15" fill="rgb(207,184,53)"/><text x="48.9544%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (358 samples, 0.67%)</title><rect x="48.4187%" y="213" width="0.6727%" height="15" fill="rgb(224,95,51)"/><text x="48.6687%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (19 samples, 0.04%)</title><rect x="49.0558%" y="197" width="0.0357%" height="15" fill="rgb(212,188,45)"/><text x="49.3058%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.02%)</title><rect x="49.8694%" y="197" width="0.0150%" height="15" fill="rgb(223,154,38)"/><text x="50.1194%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.01%)</title><rect x="49.8844%" y="197" width="0.0113%" height="15" fill="rgb(251,22,52)"/><text x="50.1344%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (221 samples, 0.42%)</title><rect x="50.4745%" y="181" width="0.4153%" height="15" fill="rgb(229,209,22)"/><text x="50.7245%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1,142 samples, 2.15%)</title><rect x="49.0915%" y="213" width="2.1459%" height="15" fill="rgb(234,138,34)"/><text x="49.3415%" y="223.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (714 samples, 1.34%)</title><rect x="49.8957%" y="197" width="1.3417%" height="15" fill="rgb(212,95,11)"/><text x="50.1457%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (185 samples, 0.35%)</title><rect x="50.8898%" y="181" width="0.3476%" height="15" fill="rgb(240,179,47)"/><text x="51.1398%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (10 samples, 0.02%)</title><rect x="51.2938%" y="181" width="0.0188%" height="15" fill="rgb(240,163,11)"/><text x="51.5438%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (284 samples, 0.53%)</title><rect x="51.3126%" y="181" width="0.5337%" height="15" fill="rgb(236,37,12)"/><text x="51.5626%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (270 samples, 0.51%)</title><rect x="51.3389%" y="165" width="0.5074%" height="15" fill="rgb(232,164,16)"/><text x="51.5889%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (70 samples, 0.13%)</title><rect x="51.7147%" y="149" width="0.1315%" height="15" fill="rgb(244,205,15)"/><text x="51.9647%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (30 samples, 0.06%)</title><rect x="51.7898%" y="133" width="0.0564%" height="15" fill="rgb(223,117,47)"/><text x="52.0398%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (314 samples, 0.59%)</title><rect x="51.2637%" y="197" width="0.5900%" height="15" fill="rgb(244,107,35)"/><text x="51.5137%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (331 samples, 0.62%)</title><rect x="51.2374%" y="213" width="0.6220%" height="15" fill="rgb(205,140,8)"/><text x="51.4874%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (69 samples, 0.13%)</title><rect x="51.8612%" y="213" width="0.1297%" height="15" fill="rgb(228,84,46)"/><text x="52.1112%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (12 samples, 0.02%)</title><rect x="51.9909%" y="213" width="0.0225%" height="15" fill="rgb(254,188,9)"/><text x="52.2409%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.03%)</title><rect x="52.0191%" y="213" width="0.0319%" height="15" fill="rgb(206,112,54)"/><text x="52.2691%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (155 samples, 0.29%)</title><rect x="52.1957%" y="165" width="0.2913%" height="15" fill="rgb(216,84,49)"/><text x="52.4457%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (143 samples, 0.27%)</title><rect x="52.2183%" y="149" width="0.2687%" height="15" fill="rgb(214,194,35)"/><text x="52.4683%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (38 samples, 0.07%)</title><rect x="52.4156%" y="133" width="0.0714%" height="15" fill="rgb(249,28,3)"/><text x="52.6656%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (16 samples, 0.03%)</title><rect x="52.4569%" y="117" width="0.0301%" height="15" fill="rgb(222,56,52)"/><text x="52.7069%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (165 samples, 0.31%)</title><rect x="52.1788%" y="181" width="0.3101%" height="15" fill="rgb(245,217,50)"/><text x="52.4288%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (178 samples, 0.33%)</title><rect x="52.1581%" y="197" width="0.3345%" height="15" fill="rgb(213,201,24)"/><text x="52.4081%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (142 samples, 0.27%)</title><rect x="52.5321%" y="165" width="0.2668%" height="15" fill="rgb(248,116,28)"/><text x="52.7821%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (133 samples, 0.25%)</title><rect x="52.5490%" y="149" width="0.2499%" height="15" fill="rgb(219,72,43)"/><text x="52.7990%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (127 samples, 0.24%)</title><rect x="52.5603%" y="133" width="0.2386%" height="15" fill="rgb(209,138,14)"/><text x="52.8103%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (42 samples, 0.08%)</title><rect x="52.7200%" y="117" width="0.0789%" height="15" fill="rgb(222,18,33)"/><text x="52.9700%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.02%)</title><rect x="52.7820%" y="101" width="0.0169%" height="15" fill="rgb(213,199,7)"/><text x="53.0320%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (147 samples, 0.28%)</title><rect x="52.5264%" y="181" width="0.2762%" height="15" fill="rgb(250,110,10)"/><text x="52.7764%" y="191.50"></text></g><g><title>zuma`&lt;alloc::string::String as core::clone::Clone&gt;::clone (168 samples, 0.32%)</title><rect x="52.5020%" y="197" width="0.3157%" height="15" fill="rgb(248,123,6)"/><text x="52.7520%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.01%)</title><rect x="52.9173%" y="165" width="0.0113%" height="15" fill="rgb(206,91,31)"/><text x="53.1673%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (11 samples, 0.02%)</title><rect x="52.9643%" y="149" width="0.0207%" height="15" fill="rgb(211,154,13)"/><text x="53.2143%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (51 samples, 0.10%)</title><rect x="53.5430%" y="117" width="0.0958%" height="15" fill="rgb(225,148,7)"/><text x="53.7930%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="53.6389%" y="117" width="0.0113%" height="15" fill="rgb(220,160,43)"/><text x="53.8889%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (528 samples, 0.99%)</title><rect x="52.9849%" y="149" width="0.9922%" height="15" fill="rgb(213,52,39)"/><text x="53.2349%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (515 samples, 0.97%)</title><rect x="53.0094%" y="133" width="0.9677%" height="15" fill="rgb(243,137,7)"/><text x="53.2594%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (174 samples, 0.33%)</title><rect x="53.6501%" y="117" width="0.3270%" height="15" fill="rgb(230,79,13)"/><text x="53.9001%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (75 samples, 0.14%)</title><rect x="53.8362%" y="101" width="0.1409%" height="15" fill="rgb(247,105,23)"/><text x="54.0862%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (560 samples, 1.05%)</title><rect x="52.9286%" y="165" width="1.0523%" height="15" fill="rgb(223,179,41)"/><text x="53.1786%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (581 samples, 1.09%)</title><rect x="52.8985%" y="181" width="1.0918%" height="15" fill="rgb(218,9,34)"/><text x="53.1485%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.01%)</title><rect x="54.0692%" y="133" width="0.0113%" height="15" fill="rgb(222,106,8)"/><text x="54.3192%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (315 samples, 0.59%)</title><rect x="54.0805%" y="133" width="0.5919%" height="15" fill="rgb(211,220,0)"/><text x="54.3305%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (299 samples, 0.56%)</title><rect x="54.1105%" y="117" width="0.5619%" height="15" fill="rgb(229,52,16)"/><text x="54.3605%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (106 samples, 0.20%)</title><rect x="54.4732%" y="101" width="0.1992%" height="15" fill="rgb(212,155,18)"/><text x="54.7232%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (26 samples, 0.05%)</title><rect x="54.6235%" y="85" width="0.0489%" height="15" fill="rgb(242,21,14)"/><text x="54.8735%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (334 samples, 0.63%)</title><rect x="54.0485%" y="149" width="0.6276%" height="15" fill="rgb(222,19,48)"/><text x="54.2985%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (353 samples, 0.66%)</title><rect x="54.0278%" y="165" width="0.6633%" height="15" fill="rgb(232,45,27)"/><text x="54.2778%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="54.6761%" y="149" width="0.0150%" height="15" fill="rgb(249,103,42)"/><text x="54.9261%" y="159.50"></text></g><g><title>zuma`&lt;alloc::string::String as core::clone::Clone&gt;::clone (377 samples, 0.71%)</title><rect x="53.9997%" y="181" width="0.7084%" height="15" fill="rgb(246,81,33)"/><text x="54.2497%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.01%)</title><rect x="54.6949%" y="165" width="0.0132%" height="15" fill="rgb(252,33,42)"/><text x="54.9449%" y="175.50"></text></g><g><title>zuma`&lt;zumalib::parsing::ast::Value as core::clone::Clone&gt;::clone (1,017 samples, 1.91%)</title><rect x="52.8177%" y="197" width="1.9110%" height="15" fill="rgb(209,212,41)"/><text x="53.0677%" y="207.50">z..</text></g><g><title>zuma`__rdl_alloc (7 samples, 0.01%)</title><rect x="54.7306%" y="197" width="0.0132%" height="15" fill="rgb(207,154,6)"/><text x="54.9806%" y="207.50"></text></g><g><title>zuma`&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,433 samples, 2.69%)</title><rect x="52.0548%" y="213" width="2.6927%" height="15" fill="rgb(223,64,47)"/><text x="52.3048%" y="223.50">zu..</text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (22 samples, 0.04%)</title><rect x="54.8547%" y="197" width="0.0413%" height="15" fill="rgb(211,161,38)"/><text x="55.1047%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (101 samples, 0.19%)</title><rect x="55.0125%" y="181" width="0.1898%" height="15" fill="rgb(219,138,40)"/><text x="55.2625%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (88 samples, 0.17%)</title><rect x="55.0369%" y="165" width="0.1654%" height="15" fill="rgb(241,228,46)"/><text x="55.2869%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (171 samples, 0.32%)</title><rect x="54.8960%" y="197" width="0.3213%" height="15" fill="rgb(223,209,38)"/><text x="55.1460%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.02%)</title><rect x="55.2023%" y="181" width="0.0150%" height="15" fill="rgb(236,164,45)"/><text x="55.4523%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.01%)</title><rect x="55.6251%" y="181" width="0.0113%" height="15" fill="rgb(231,15,5)"/><text x="55.8751%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (100 samples, 0.19%)</title><rect x="55.9314%" y="165" width="0.1879%" height="15" fill="rgb(252,35,15)"/><text x="56.1814%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (563 samples, 1.06%)</title><rect x="55.2173%" y="197" width="1.0579%" height="15" fill="rgb(248,181,18)"/><text x="55.4673%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (340 samples, 0.64%)</title><rect x="55.6364%" y="181" width="0.6389%" height="15" fill="rgb(233,39,42)"/><text x="55.8864%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (83 samples, 0.16%)</title><rect x="56.1193%" y="165" width="0.1560%" height="15" fill="rgb(238,110,33)"/><text x="56.3693%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (29 samples, 0.05%)</title><rect x="56.2753%" y="197" width="0.0545%" height="15" fill="rgb(233,195,10)"/><text x="56.5253%" y="207.50"></text></g><g><title>zuma`__rdl_dealloc (10 samples, 0.02%)</title><rect x="56.3391%" y="197" width="0.0188%" height="15" fill="rgb(254,105,3)"/><text x="56.5891%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (39 samples, 0.07%)</title><rect x="56.4012%" y="181" width="0.0733%" height="15" fill="rgb(221,225,9)"/><text x="56.6512%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (143 samples, 0.27%)</title><rect x="56.6473%" y="165" width="0.2687%" height="15" fill="rgb(224,227,45)"/><text x="56.8973%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (128 samples, 0.24%)</title><rect x="56.6755%" y="149" width="0.2405%" height="15" fill="rgb(229,198,43)"/><text x="56.9255%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (245 samples, 0.46%)</title><rect x="56.4744%" y="181" width="0.4604%" height="15" fill="rgb(206,209,35)"/><text x="56.7244%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (10 samples, 0.02%)</title><rect x="56.9160%" y="165" width="0.0188%" height="15" fill="rgb(245,195,53)"/><text x="57.1660%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (203 samples, 0.38%)</title><rect x="57.8969%" y="149" width="0.3815%" height="15" fill="rgb(240,92,26)"/><text x="58.1469%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (741 samples, 1.39%)</title><rect x="56.9348%" y="181" width="1.3924%" height="15" fill="rgb(207,40,23)"/><text x="57.1848%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (419 samples, 0.79%)</title><rect x="57.5399%" y="165" width="0.7873%" height="15" fill="rgb(223,111,35)"/><text x="57.7899%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (26 samples, 0.05%)</title><rect x="58.2784%" y="149" width="0.0489%" height="15" fill="rgb(229,147,28)"/><text x="58.5284%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (7 samples, 0.01%)</title><rect x="58.3272%" y="181" width="0.0132%" height="15" fill="rgb(211,29,28)"/><text x="58.5772%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.02%)</title><rect x="58.3404%" y="181" width="0.0169%" height="15" fill="rgb(228,72,33)"/><text x="58.5904%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="58.3573%" y="181" width="0.0113%" height="15" fill="rgb(205,214,31)"/><text x="58.6073%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (10 samples, 0.02%)</title><rect x="58.4437%" y="165" width="0.0188%" height="15" fill="rgb(224,111,15)"/><text x="58.6937%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (45 samples, 0.08%)</title><rect x="58.5095%" y="149" width="0.0846%" height="15" fill="rgb(253,21,26)"/><text x="58.7595%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (42 samples, 0.08%)</title><rect x="58.5151%" y="133" width="0.0789%" height="15" fill="rgb(245,139,43)"/><text x="58.7651%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (75 samples, 0.14%)</title><rect x="58.4625%" y="165" width="0.1409%" height="15" fill="rgb(252,170,7)"/><text x="58.7125%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (81 samples, 0.15%)</title><rect x="58.9116%" y="133" width="0.1522%" height="15" fill="rgb(231,118,14)"/><text x="59.1616%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (259 samples, 0.49%)</title><rect x="58.6035%" y="165" width="0.4867%" height="15" fill="rgb(238,83,0)"/><text x="58.8535%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (166 samples, 0.31%)</title><rect x="58.7782%" y="149" width="0.3119%" height="15" fill="rgb(221,39,39)"/><text x="59.0282%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (14 samples, 0.03%)</title><rect x="59.0638%" y="133" width="0.0263%" height="15" fill="rgb(222,119,46)"/><text x="59.3138%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.01%)</title><rect x="59.0901%" y="165" width="0.0113%" height="15" fill="rgb(222,165,49)"/><text x="59.3401%" y="175.50"></text></g><g><title>zuma`&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,324 samples, 4.37%)</title><rect x="54.7475%" y="213" width="4.3670%" height="15" fill="rgb(219,113,52)"/><text x="54.9975%" y="223.50">zuma`..</text></g><g><title>zuma`core::ptr::drop_in_place (1,467 samples, 2.76%)</title><rect x="56.3579%" y="197" width="2.7566%" height="15" fill="rgb(214,7,15)"/><text x="56.6079%" y="207.50">zu..</text></g><g><title>zuma`core::ptr::drop_in_place (389 samples, 0.73%)</title><rect x="58.3836%" y="181" width="0.7310%" height="15" fill="rgb(235,32,4)"/><text x="58.6336%" y="191.50"></text></g><g><title>zuma`__rdl_alloc (23 samples, 0.04%)</title><rect x="59.1277%" y="213" width="0.0432%" height="15" fill="rgb(238,90,54)"/><text x="59.3777%" y="223.50"></text></g><g><title>zuma`__rdl_dealloc (31 samples, 0.06%)</title><rect x="59.1709%" y="213" width="0.0583%" height="15" fill="rgb(213,208,19)"/><text x="59.4209%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (13 samples, 0.02%)</title><rect x="59.3814%" y="165" width="0.0244%" height="15" fill="rgb(233,156,4)"/><text x="59.6314%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (30 samples, 0.06%)</title><rect x="59.8004%" y="133" width="0.0564%" height="15" fill="rgb(207,194,5)"/><text x="60.0504%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (364 samples, 0.68%)</title><rect x="59.4058%" y="165" width="0.6840%" height="15" fill="rgb(206,111,30)"/><text x="59.6558%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (353 samples, 0.66%)</title><rect x="59.4265%" y="149" width="0.6633%" height="15" fill="rgb(243,70,54)"/><text x="59.6765%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (124 samples, 0.23%)</title><rect x="59.8568%" y="133" width="0.2330%" height="15" fill="rgb(242,28,8)"/><text x="60.1068%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (50 samples, 0.09%)</title><rect x="59.9959%" y="117" width="0.0940%" height="15" fill="rgb(219,106,18)"/><text x="60.2459%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (388 samples, 0.73%)</title><rect x="59.3626%" y="181" width="0.7291%" height="15" fill="rgb(244,222,10)"/><text x="59.6126%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (411 samples, 0.77%)</title><rect x="59.3344%" y="197" width="0.7723%" height="15" fill="rgb(236,179,52)"/><text x="59.5844%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="60.0917%" y="181" width="0.0150%" height="15" fill="rgb(213,23,39)"/><text x="60.3417%" y="191.50"></text></g><g><title>zuma`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (464 samples, 0.87%)</title><rect x="59.2386%" y="213" width="0.8719%" height="15" fill="rgb(238,48,10)"/><text x="59.4886%" y="223.50"></text></g><g><title>zuma`core::fmt::write (6 samples, 0.01%)</title><rect x="60.1274%" y="213" width="0.0113%" height="15" fill="rgb(251,196,23)"/><text x="60.3774%" y="223.50"></text></g><g><title>zuma`core::ptr::drop_in_place (20 samples, 0.04%)</title><rect x="60.1387%" y="213" width="0.0376%" height="15" fill="rgb(250,152,24)"/><text x="60.3887%" y="223.50"></text></g><g><title>zuma`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.03%)</title><rect x="60.3567%" y="197" width="0.0319%" height="15" fill="rgb(209,150,17)"/><text x="60.6067%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (12 samples, 0.02%)</title><rect x="60.6348%" y="117" width="0.0225%" height="15" fill="rgb(234,202,34)"/><text x="60.8848%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (135 samples, 0.25%)</title><rect x="60.4675%" y="149" width="0.2537%" height="15" fill="rgb(253,148,53)"/><text x="60.7175%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (131 samples, 0.25%)</title><rect x="60.4750%" y="133" width="0.2462%" height="15" fill="rgb(218,129,16)"/><text x="60.7250%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (34 samples, 0.06%)</title><rect x="60.6573%" y="117" width="0.0639%" height="15" fill="rgb(216,85,19)"/><text x="60.9073%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.01%)</title><rect x="60.7080%" y="101" width="0.0132%" height="15" fill="rgb(235,228,7)"/><text x="60.9580%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (141 samples, 0.26%)</title><rect x="60.4581%" y="165" width="0.2650%" height="15" fill="rgb(245,175,0)"/><text x="60.7081%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (150 samples, 0.28%)</title><rect x="60.4450%" y="181" width="0.2819%" height="15" fill="rgb(208,168,36)"/><text x="60.6950%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="60.7287%" y="181" width="0.0207%" height="15" fill="rgb(246,171,24)"/><text x="60.9787%" y="191.50"></text></g><g><title>zuma`hashbrown::map::HashMap&lt;K,V,S&gt;::insert (307 samples, 0.58%)</title><rect x="60.1763%" y="213" width="0.5769%" height="15" fill="rgb(215,142,24)"/><text x="60.4263%" y="223.50"></text></g><g><title>zuma`hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (192 samples, 0.36%)</title><rect x="60.3924%" y="197" width="0.3608%" height="15" fill="rgb(250,187,7)"/><text x="60.6424%" y="207.50"></text></g><g><title>zuma`hashbrown::map::HashMap&lt;K,V,S&gt;::remove (8 samples, 0.02%)</title><rect x="60.7531%" y="213" width="0.0150%" height="15" fill="rgb(228,66,33)"/><text x="61.0031%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (27 samples, 0.05%)</title><rect x="60.8584%" y="181" width="0.0507%" height="15" fill="rgb(234,215,21)"/><text x="61.1084%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (24 samples, 0.05%)</title><rect x="60.8640%" y="165" width="0.0451%" height="15" fill="rgb(222,191,20)"/><text x="61.1140%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (46 samples, 0.09%)</title><rect x="60.8283%" y="197" width="0.0864%" height="15" fill="rgb(245,79,54)"/><text x="61.0783%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (106 samples, 0.20%)</title><rect x="60.9147%" y="197" width="0.1992%" height="15" fill="rgb(240,10,37)"/><text x="61.1647%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (47 samples, 0.09%)</title><rect x="61.0256%" y="181" width="0.0883%" height="15" fill="rgb(214,192,32)"/><text x="61.2756%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (25 samples, 0.05%)</title><rect x="61.0670%" y="165" width="0.0470%" height="15" fill="rgb(209,36,54)"/><text x="61.3170%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (22 samples, 0.04%)</title><rect x="61.1214%" y="197" width="0.0413%" height="15" fill="rgb(220,10,11)"/><text x="61.3714%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (12 samples, 0.02%)</title><rect x="61.1665%" y="165" width="0.0225%" height="15" fill="rgb(221,106,17)"/><text x="61.4165%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (12 samples, 0.02%)</title><rect x="61.1665%" y="149" width="0.0225%" height="15" fill="rgb(251,142,44)"/><text x="61.4165%" y="159.50"></text></g><g><title>zuma`zumalib::interpretation::graphics::Graphics::add_many (218 samples, 0.41%)</title><rect x="60.7851%" y="213" width="0.4096%" height="15" fill="rgb(238,13,15)"/><text x="61.0351%" y="223.50"></text></g><g><title>zuma`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.03%)</title><rect x="61.1628%" y="197" width="0.0319%" height="15" fill="rgb(208,107,27)"/><text x="61.4128%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (15 samples, 0.03%)</title><rect x="61.1665%" y="181" width="0.0282%" height="15" fill="rgb(205,136,37)"/><text x="61.4165%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="61.5348%" y="197" width="0.0132%" height="15" fill="rgb(250,205,27)"/><text x="61.7848%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (30 samples, 0.06%)</title><rect x="61.5480%" y="197" width="0.0564%" height="15" fill="rgb(210,80,43)"/><text x="61.7980%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (102 samples, 0.19%)</title><rect x="61.7397%" y="181" width="0.1917%" height="15" fill="rgb(247,160,36)"/><text x="61.9897%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (96 samples, 0.18%)</title><rect x="61.7509%" y="165" width="0.1804%" height="15" fill="rgb(234,13,49)"/><text x="62.0009%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (182 samples, 0.34%)</title><rect x="61.6044%" y="197" width="0.3420%" height="15" fill="rgb(234,122,0)"/><text x="61.8544%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.02%)</title><rect x="61.9313%" y="181" width="0.0150%" height="15" fill="rgb(207,146,38)"/><text x="62.1813%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (56 samples, 0.11%)</title><rect x="62.6153%" y="165" width="0.1052%" height="15" fill="rgb(207,177,25)"/><text x="62.8653%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (469 samples, 0.88%)</title><rect x="61.9464%" y="197" width="0.8813%" height="15" fill="rgb(211,178,42)"/><text x="62.1964%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (221 samples, 0.42%)</title><rect x="62.4124%" y="181" width="0.4153%" height="15" fill="rgb(230,69,54)"/><text x="62.6624%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (57 samples, 0.11%)</title><rect x="62.7206%" y="165" width="0.1071%" height="15" fill="rgb(214,135,41)"/><text x="62.9706%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (9 samples, 0.02%)</title><rect x="62.8277%" y="197" width="0.0169%" height="15" fill="rgb(237,67,25)"/><text x="63.0777%" y="207.50"></text></g><g><title>zuma`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="62.8521%" y="197" width="0.0150%" height="15" fill="rgb(222,189,50)"/><text x="63.1021%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (7 samples, 0.01%)</title><rect x="62.9423%" y="181" width="0.0132%" height="15" fill="rgb(245,148,34)"/><text x="63.1923%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (35 samples, 0.07%)</title><rect x="63.0024%" y="165" width="0.0658%" height="15" fill="rgb(222,29,6)"/><text x="63.2524%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (33 samples, 0.06%)</title><rect x="63.0062%" y="149" width="0.0620%" height="15" fill="rgb(221,189,43)"/><text x="63.2562%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (66 samples, 0.12%)</title><rect x="62.9554%" y="181" width="0.1240%" height="15" fill="rgb(207,36,27)"/><text x="63.2054%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (6 samples, 0.01%)</title><rect x="63.0682%" y="165" width="0.0113%" height="15" fill="rgb(217,90,24)"/><text x="63.3182%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (243 samples, 0.46%)</title><rect x="63.0795%" y="181" width="0.4566%" height="15" fill="rgb(224,66,35)"/><text x="63.3295%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (128 samples, 0.24%)</title><rect x="63.2956%" y="165" width="0.2405%" height="15" fill="rgb(221,13,50)"/><text x="63.5456%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (61 samples, 0.11%)</title><rect x="63.4215%" y="149" width="0.1146%" height="15" fill="rgb(236,68,49)"/><text x="63.6715%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (7 samples, 0.01%)</title><rect x="63.5718%" y="165" width="0.0132%" height="15" fill="rgb(229,146,28)"/><text x="63.8218%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (26 samples, 0.05%)</title><rect x="63.6075%" y="149" width="0.0489%" height="15" fill="rgb(225,31,38)"/><text x="63.8575%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (23 samples, 0.04%)</title><rect x="63.6131%" y="133" width="0.0432%" height="15" fill="rgb(250,208,3)"/><text x="63.8631%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (40 samples, 0.08%)</title><rect x="63.5849%" y="165" width="0.0752%" height="15" fill="rgb(246,54,23)"/><text x="63.8349%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (50 samples, 0.09%)</title><rect x="63.6601%" y="165" width="0.0940%" height="15" fill="rgb(243,76,11)"/><text x="63.9101%" y="175.50"></text></g><g><title>zuma`core::ptr::drop_in_place (470 samples, 0.88%)</title><rect x="62.8746%" y="197" width="0.8832%" height="15" fill="rgb(245,21,50)"/><text x="63.1246%" y="207.50"></text></g><g><title>zuma`core::ptr::drop_in_place (108 samples, 0.20%)</title><rect x="63.5549%" y="181" width="0.2029%" height="15" fill="rgb(228,9,43)"/><text x="63.8049%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (7 samples, 0.01%)</title><rect x="64.3516%" y="181" width="0.0132%" height="15" fill="rgb(208,100,47)"/><text x="64.6016%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (22 samples, 0.04%)</title><rect x="64.3948%" y="165" width="0.0413%" height="15" fill="rgb(232,26,8)"/><text x="64.6448%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (17 samples, 0.03%)</title><rect x="64.4042%" y="149" width="0.0319%" height="15" fill="rgb(216,166,38)"/><text x="64.6542%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (40 samples, 0.08%)</title><rect x="64.3648%" y="181" width="0.0752%" height="15" fill="rgb(251,202,51)"/><text x="64.6148%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (23 samples, 0.04%)</title><rect x="64.5959%" y="149" width="0.0432%" height="15" fill="rgb(254,216,34)"/><text x="64.8459%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (107 samples, 0.20%)</title><rect x="64.4399%" y="181" width="0.2011%" height="15" fill="rgb(251,32,27)"/><text x="64.6899%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (57 samples, 0.11%)</title><rect x="64.5339%" y="165" width="0.1071%" height="15" fill="rgb(208,127,28)"/><text x="64.7839%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (6 samples, 0.01%)</title><rect x="64.6410%" y="181" width="0.0113%" height="15" fill="rgb(224,137,22)"/><text x="64.8910%" y="191.50"></text></g><g><title>zuma`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (104 samples, 0.20%)</title><rect x="64.6598%" y="181" width="0.1954%" height="15" fill="rgb(254,70,32)"/><text x="64.9098%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (51 samples, 0.10%)</title><rect x="65.7215%" y="101" width="0.0958%" height="15" fill="rgb(229,75,37)"/><text x="65.9715%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (366 samples, 0.69%)</title><rect x="65.3306%" y="133" width="0.6878%" height="15" fill="rgb(252,64,23)"/><text x="65.5806%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (353 samples, 0.66%)</title><rect x="65.3551%" y="117" width="0.6633%" height="15" fill="rgb(232,162,48)"/><text x="65.6051%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (106 samples, 0.20%)</title><rect x="65.8192%" y="101" width="0.1992%" height="15" fill="rgb(246,160,12)"/><text x="66.0692%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (383 samples, 0.72%)</title><rect x="65.3024%" y="149" width="0.7197%" height="15" fill="rgb(247,166,0)"/><text x="65.5524%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (396 samples, 0.74%)</title><rect x="65.2818%" y="165" width="0.7441%" height="15" fill="rgb(249,219,21)"/><text x="65.5318%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (17 samples, 0.03%)</title><rect x="66.0278%" y="165" width="0.0319%" height="15" fill="rgb(205,209,3)"/><text x="66.2778%" y="175.50"></text></g><g><title>zuma`hashbrown::map::HashMap&lt;K,V,S&gt;::insert (1,271 samples, 2.39%)</title><rect x="63.7578%" y="197" width="2.3883%" height="15" fill="rgb(243,44,1)"/><text x="64.0078%" y="207.50">zu..</text></g><g><title>zuma`hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (682 samples, 1.28%)</title><rect x="64.8646%" y="181" width="1.2815%" height="15" fill="rgb(206,159,16)"/><text x="65.1146%" y="191.50"></text></g><g><title>zuma`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (44 samples, 0.08%)</title><rect x="66.0635%" y="165" width="0.0827%" height="15" fill="rgb(244,77,30)"/><text x="66.3135%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (32 samples, 0.06%)</title><rect x="66.7719%" y="101" width="0.0601%" height="15" fill="rgb(218,69,12)"/><text x="67.0219%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (354 samples, 0.67%)</title><rect x="66.4224%" y="133" width="0.6652%" height="15" fill="rgb(212,87,7)"/><text x="66.6724%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (337 samples, 0.63%)</title><rect x="66.4543%" y="117" width="0.6333%" height="15" fill="rgb(245,114,25)"/><text x="66.7043%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (135 samples, 0.25%)</title><rect x="66.8339%" y="101" width="0.2537%" height="15" fill="rgb(210,61,42)"/><text x="67.0839%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (63 samples, 0.12%)</title><rect x="66.9692%" y="85" width="0.1184%" height="15" fill="rgb(211,52,33)"/><text x="67.2192%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (385 samples, 0.72%)</title><rect x="66.3698%" y="149" width="0.7235%" height="15" fill="rgb(234,58,33)"/><text x="66.6198%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (396 samples, 0.74%)</title><rect x="66.3529%" y="165" width="0.7441%" height="15" fill="rgb(220,115,36)"/><text x="66.6029%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.01%)</title><rect x="67.1853%" y="117" width="0.0132%" height="15" fill="rgb(243,153,54)"/><text x="67.4353%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (322 samples, 0.61%)</title><rect x="67.1985%" y="117" width="0.6051%" height="15" fill="rgb(251,47,18)"/><text x="67.4485%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (312 samples, 0.59%)</title><rect x="67.2172%" y="101" width="0.5863%" height="15" fill="rgb(242,102,42)"/><text x="67.4672%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (120 samples, 0.23%)</title><rect x="67.5780%" y="85" width="0.2255%" height="15" fill="rgb(234,31,38)"/><text x="67.8280%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (46 samples, 0.09%)</title><rect x="67.7171%" y="69" width="0.0864%" height="15" fill="rgb(221,117,51)"/><text x="67.9671%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (342 samples, 0.64%)</title><rect x="67.1627%" y="133" width="0.6427%" height="15" fill="rgb(212,20,18)"/><text x="67.4127%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (361 samples, 0.68%)</title><rect x="67.1364%" y="149" width="0.6784%" height="15" fill="rgb(245,133,36)"/><text x="67.3864%" y="159.50"></text></g><g><title>zuma`&lt;alloc::string::String as core::clone::Clone&gt;::clone (395 samples, 0.74%)</title><rect x="67.1007%" y="165" width="0.7422%" height="15" fill="rgb(212,6,19)"/><text x="67.3507%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.03%)</title><rect x="67.8167%" y="149" width="0.0263%" height="15" fill="rgb(218,1,36)"/><text x="68.0667%" y="159.50"></text></g><g><title>zuma`&lt;zumalib::parsing::ast::Value as core::clone::Clone&gt;::clone (822 samples, 1.54%)</title><rect x="66.3078%" y="181" width="1.5446%" height="15" fill="rgb(246,84,54)"/><text x="66.5578%" y="191.50"></text></g><g><title>zuma`__rdl_alloc (6 samples, 0.01%)</title><rect x="67.8524%" y="181" width="0.0113%" height="15" fill="rgb(242,110,6)"/><text x="68.1024%" y="191.50"></text></g><g><title>zuma`hashbrown::map::make_hash (8 samples, 0.02%)</title><rect x="67.8693%" y="181" width="0.0150%" height="15" fill="rgb(214,47,5)"/><text x="68.1193%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (25 samples, 0.05%)</title><rect x="68.2564%" y="165" width="0.0470%" height="15" fill="rgb(218,159,25)"/><text x="68.5064%" y="175.50"></text></g><g><title>zuma`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.03%)</title><rect x="68.3128%" y="165" width="0.0263%" height="15" fill="rgb(215,211,28)"/><text x="68.5628%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (11 samples, 0.02%)</title><rect x="68.6472%" y="133" width="0.0207%" height="15" fill="rgb(238,59,32)"/><text x="68.8972%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (28 samples, 0.05%)</title><rect x="68.7769%" y="117" width="0.0526%" height="15" fill="rgb(226,82,3)"/><text x="69.0269%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (126 samples, 0.24%)</title><rect x="70.2257%" y="85" width="0.2368%" height="15" fill="rgb(240,164,32)"/><text x="70.4757%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,200 samples, 2.25%)</title><rect x="68.8295%" y="117" width="2.2549%" height="15" fill="rgb(232,46,7)"/><text x="69.0795%" y="127.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1,148 samples, 2.16%)</title><rect x="68.9272%" y="101" width="2.1572%" height="15" fill="rgb(229,129,53)"/><text x="69.1772%" y="111.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (328 samples, 0.62%)</title><rect x="70.4681%" y="85" width="0.6163%" height="15" fill="rgb(234,188,29)"/><text x="70.7181%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (40 samples, 0.08%)</title><rect x="71.0093%" y="69" width="0.0752%" height="15" fill="rgb(246,141,4)"/><text x="71.2593%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1,295 samples, 2.43%)</title><rect x="68.6679%" y="133" width="2.4334%" height="15" fill="rgb(229,23,39)"/><text x="68.9179%" y="143.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="71.0844%" y="117" width="0.0169%" height="15" fill="rgb(206,12,3)"/><text x="71.3344%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1,347 samples, 2.53%)</title><rect x="68.5927%" y="149" width="2.5311%" height="15" fill="rgb(252,226,20)"/><text x="68.8427%" y="159.50">li..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.02%)</title><rect x="71.1013%" y="133" width="0.0225%" height="15" fill="rgb(216,123,35)"/><text x="71.3513%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (13 samples, 0.02%)</title><rect x="71.2705%" y="101" width="0.0244%" height="15" fill="rgb(212,68,40)"/><text x="71.5205%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (465 samples, 0.87%)</title><rect x="71.2949%" y="101" width="0.8738%" height="15" fill="rgb(254,125,32)"/><text x="71.5449%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (441 samples, 0.83%)</title><rect x="71.3400%" y="85" width="0.8287%" height="15" fill="rgb(253,97,22)"/><text x="71.5900%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (100 samples, 0.19%)</title><rect x="71.9808%" y="69" width="0.1879%" height="15" fill="rgb(241,101,14)"/><text x="72.2308%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (25 samples, 0.05%)</title><rect x="72.1217%" y="53" width="0.0470%" height="15" fill="rgb(238,103,29)"/><text x="72.3717%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (499 samples, 0.94%)</title><rect x="71.2329%" y="117" width="0.9377%" height="15" fill="rgb(233,195,47)"/><text x="71.4829%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc (522 samples, 0.98%)</title><rect x="71.1991%" y="133" width="0.9809%" height="15" fill="rgb(246,218,30)"/><text x="71.4491%" y="143.50"></text></g><g><title>zuma`&lt;alloc::string::String as core::clone::Clone&gt;::clone (577 samples, 1.08%)</title><rect x="71.1370%" y="149" width="1.0842%" height="15" fill="rgb(219,145,47)"/><text x="71.3870%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.03%)</title><rect x="72.1893%" y="133" width="0.0319%" height="15" fill="rgb(243,12,26)"/><text x="72.4393%" y="143.50"></text></g><g><title>zuma`&lt;zumalib::parsing::ast::Value as core::clone::Clone&gt;::clone (23 samples, 0.04%)</title><rect x="72.2213%" y="149" width="0.0432%" height="15" fill="rgb(214,87,16)"/><text x="72.4713%" y="159.50"></text></g><g><title>zuma`&lt;zumalib::parsing::ast::Value as core::clone::Clone&gt;::clone (2,098 samples, 3.94%)</title><rect x="68.3391%" y="165" width="3.9423%" height="15" fill="rgb(208,99,42)"/><text x="68.5891%" y="175.50">zuma..</text></g><g><title>zuma`__rdl_alloc (6 samples, 0.01%)</title><rect x="72.2701%" y="149" width="0.0113%" height="15" fill="rgb(253,99,2)"/><text x="72.5201%" y="159.50"></text></g><g><title>zuma`__rdl_alloc (16 samples, 0.03%)</title><rect x="72.2814%" y="165" width="0.0301%" height="15" fill="rgb(220,168,23)"/><text x="72.5314%" y="175.50"></text></g><g><title>zuma`zumalib::interpretation::helpers::create_arg_map (6,158 samples, 11.57%)</title><rect x="61.1947%" y="213" width="11.5715%" height="15" fill="rgb(242,38,24)"/><text x="61.4447%" y="223.50">zuma`zumalib::int..</text></g><g><title>zuma`zumalib::interpretation::helpers::get_value (3,518 samples, 6.61%)</title><rect x="66.1556%" y="197" width="6.6107%" height="15" fill="rgb(225,182,9)"/><text x="66.4056%" y="207.50">zuma`zuma..</text></g><g><title>zuma`zumalib::interpretation::helpers::get_constant (2,598 samples, 4.88%)</title><rect x="67.8843%" y="181" width="4.8819%" height="15" fill="rgb(243,178,37)"/><text x="68.1343%" y="191.50">zuma`z..</text></g><g><title>zuma`hashbrown::map::make_hash (237 samples, 0.45%)</title><rect x="72.3209%" y="165" width="0.4453%" height="15" fill="rgb(232,139,19)"/><text x="72.5709%" y="175.50"></text></g><g><title>zuma`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (82 samples, 0.15%)</title><rect x="72.6121%" y="149" width="0.1541%" height="15" fill="rgb(225,201,24)"/><text x="72.8621%" y="159.50"></text></g><g><title>zuma`zumalib::interpretation::helpers::get_color (6 samples, 0.01%)</title><rect x="72.7662%" y="213" width="0.0113%" height="15" fill="rgb(221,47,46)"/><text x="73.0162%" y="223.50"></text></g><g><title>zuma`zumalib::interpretation::helpers::get_value (10 samples, 0.02%)</title><rect x="72.7775%" y="213" width="0.0188%" height="15" fill="rgb(249,23,13)"/><text x="73.0275%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (32 samples, 0.06%)</title><rect x="73.3769%" y="197" width="0.0601%" height="15" fill="rgb(219,9,5)"/><text x="73.6269%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (157 samples, 0.30%)</title><rect x="73.6381%" y="181" width="0.2950%" height="15" fill="rgb(254,171,16)"/><text x="73.8881%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (145 samples, 0.27%)</title><rect x="73.6607%" y="165" width="0.2725%" height="15" fill="rgb(230,171,20)"/><text x="73.9107%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (273 samples, 0.51%)</title><rect x="73.4371%" y="197" width="0.5130%" height="15" fill="rgb(210,71,41)"/><text x="73.6871%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.02%)</title><rect x="73.9331%" y="181" width="0.0169%" height="15" fill="rgb(206,173,20)"/><text x="74.1831%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.02%)</title><rect x="74.6604%" y="181" width="0.0150%" height="15" fill="rgb(233,88,34)"/><text x="74.9104%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.01%)</title><rect x="74.6754%" y="181" width="0.0113%" height="15" fill="rgb(223,209,46)"/><text x="74.9254%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (215 samples, 0.40%)</title><rect x="75.2805%" y="165" width="0.4040%" height="15" fill="rgb(250,43,18)"/><text x="75.5305%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (971 samples, 1.82%)</title><rect x="73.9501%" y="197" width="1.8246%" height="15" fill="rgb(208,13,10)"/><text x="74.2001%" y="207.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (579 samples, 1.09%)</title><rect x="74.6867%" y="181" width="1.0880%" height="15" fill="rgb(212,200,36)"/><text x="74.9367%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (48 samples, 0.09%)</title><rect x="75.6845%" y="165" width="0.0902%" height="15" fill="rgb(225,90,30)"/><text x="75.9345%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (10 samples, 0.02%)</title><rect x="75.8141%" y="181" width="0.0188%" height="15" fill="rgb(236,182,39)"/><text x="76.0641%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (22 samples, 0.04%)</title><rect x="75.8780%" y="165" width="0.0413%" height="15" fill="rgb(212,144,35)"/><text x="76.1280%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (52 samples, 0.10%)</title><rect x="76.6165%" y="133" width="0.0977%" height="15" fill="rgb(228,63,44)"/><text x="76.8665%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (644 samples, 1.21%)</title><rect x="75.8329%" y="181" width="1.2101%" height="15" fill="rgb(228,109,6)"/><text x="76.0829%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (598 samples, 1.12%)</title><rect x="75.9193%" y="165" width="1.1237%" height="15" fill="rgb(238,117,24)"/><text x="76.1693%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (579 samples, 1.09%)</title><rect x="75.9551%" y="149" width="1.0880%" height="15" fill="rgb(242,26,26)"/><text x="76.2051%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (172 samples, 0.32%)</title><rect x="76.7198%" y="133" width="0.3232%" height="15" fill="rgb(221,92,48)"/><text x="76.9698%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (82 samples, 0.15%)</title><rect x="76.8890%" y="117" width="0.1541%" height="15" fill="rgb(209,209,32)"/><text x="77.1390%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc (683 samples, 1.28%)</title><rect x="75.7747%" y="197" width="1.2834%" height="15" fill="rgb(221,70,22)"/><text x="76.0247%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="77.0431%" y="181" width="0.0150%" height="15" fill="rgb(248,145,5)"/><text x="77.2931%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (32 samples, 0.06%)</title><rect x="77.0675%" y="197" width="0.0601%" height="15" fill="rgb(226,116,26)"/><text x="77.3175%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.01%)</title><rect x="77.1276%" y="197" width="0.0132%" height="15" fill="rgb(244,5,17)"/><text x="77.3776%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.02%)</title><rect x="77.1520%" y="197" width="0.0188%" height="15" fill="rgb(252,159,33)"/><text x="77.4020%" y="207.50"></text></g><g><title>zuma`&lt;&amp;T as core::fmt::Display&gt;::fmt (9 samples, 0.02%)</title><rect x="77.1708%" y="197" width="0.0169%" height="15" fill="rgb(206,71,0)"/><text x="77.4208%" y="207.50"></text></g><g><title>zuma`&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.03%)</title><rect x="77.1971%" y="197" width="0.0263%" height="15" fill="rgb(233,118,54)"/><text x="77.4471%" y="207.50"></text></g><g><title>zuma`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.03%)</title><rect x="77.2234%" y="197" width="0.0319%" height="15" fill="rgb(234,83,48)"/><text x="77.4734%" y="207.50"></text></g><g><title>zuma`DYLD-STUB$$memcpy (13 samples, 0.02%)</title><rect x="77.2591%" y="197" width="0.0244%" height="15" fill="rgb(228,3,54)"/><text x="77.5091%" y="207.50"></text></g><g><title>zuma`__rdl_alloc (18 samples, 0.03%)</title><rect x="77.2836%" y="197" width="0.0338%" height="15" fill="rgb(226,155,13)"/><text x="77.5336%" y="207.50"></text></g><g><title>zuma`__rdl_dealloc (17 samples, 0.03%)</title><rect x="77.3174%" y="197" width="0.0319%" height="15" fill="rgb(241,28,37)"/><text x="77.5674%" y="207.50"></text></g><g><title>zuma`__rust_alloc (7 samples, 0.01%)</title><rect x="77.3493%" y="197" width="0.0132%" height="15" fill="rgb(233,93,10)"/><text x="77.5993%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (240 samples, 0.45%)</title><rect x="77.5222%" y="149" width="0.4510%" height="15" fill="rgb(225,113,19)"/><text x="77.7722%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (227 samples, 0.43%)</title><rect x="77.5466%" y="133" width="0.4266%" height="15" fill="rgb(241,2,18)"/><text x="77.7966%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (67 samples, 0.13%)</title><rect x="77.8473%" y="117" width="0.1259%" height="15" fill="rgb(228,207,21)"/><text x="78.0973%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (21 samples, 0.04%)</title><rect x="77.9337%" y="101" width="0.0395%" height="15" fill="rgb(213,211,35)"/><text x="78.1837%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (264 samples, 0.50%)</title><rect x="77.4809%" y="165" width="0.4961%" height="15" fill="rgb(209,83,10)"/><text x="77.7309%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (283 samples, 0.53%)</title><rect x="77.4546%" y="181" width="0.5318%" height="15" fill="rgb(209,164,1)"/><text x="77.7046%" y="191.50"></text></g><g><title>zuma`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (18 samples, 0.03%)</title><rect x="77.9901%" y="181" width="0.0338%" height="15" fill="rgb(213,184,43)"/><text x="78.2401%" y="191.50"></text></g><g><title>zuma`core::fmt::num::imp::_&lt;impl core::fmt::Display for u8&gt;::fmt (14 samples, 0.03%)</title><rect x="78.0239%" y="181" width="0.0263%" height="15" fill="rgb(231,61,34)"/><text x="78.2739%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (7 samples, 0.01%)</title><rect x="78.2739%" y="117" width="0.0132%" height="15" fill="rgb(235,75,3)"/><text x="78.5239%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.03%)</title><rect x="78.3227%" y="101" width="0.0282%" height="15" fill="rgb(220,106,47)"/><text x="78.5727%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (64 samples, 0.12%)</title><rect x="78.3547%" y="101" width="0.1203%" height="15" fill="rgb(210,196,33)"/><text x="78.6047%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (60 samples, 0.11%)</title><rect x="78.3622%" y="85" width="0.1127%" height="15" fill="rgb(229,154,42)"/><text x="78.6122%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (23 samples, 0.04%)</title><rect x="78.4317%" y="69" width="0.0432%" height="15" fill="rgb(228,114,26)"/><text x="78.6817%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.02%)</title><rect x="78.4580%" y="53" width="0.0169%" height="15" fill="rgb(208,144,1)"/><text x="78.7080%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (22 samples, 0.04%)</title><rect x="78.4749%" y="101" width="0.0413%" height="15" fill="rgb(239,112,37)"/><text x="78.7249%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (18 samples, 0.03%)</title><rect x="78.4824%" y="85" width="0.0338%" height="15" fill="rgb(210,96,50)"/><text x="78.7324%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (61 samples, 0.11%)</title><rect x="78.5163%" y="101" width="0.1146%" height="15" fill="rgb(222,178,2)"/><text x="78.7663%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (7 samples, 0.01%)</title><rect x="78.6177%" y="85" width="0.0132%" height="15" fill="rgb(226,74,18)"/><text x="78.8677%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (182 samples, 0.34%)</title><rect x="78.2983%" y="117" width="0.3420%" height="15" fill="rgb(225,67,54)"/><text x="78.5483%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (201 samples, 0.38%)</title><rect x="78.2663%" y="133" width="0.3777%" height="15" fill="rgb(251,92,32)"/><text x="78.5163%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (20 samples, 0.04%)</title><rect x="78.6440%" y="133" width="0.0376%" height="15" fill="rgb(228,149,22)"/><text x="78.8940%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (19 samples, 0.04%)</title><rect x="78.6459%" y="117" width="0.0357%" height="15" fill="rgb(243,54,13)"/><text x="78.8959%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (229 samples, 0.43%)</title><rect x="78.2551%" y="149" width="0.4303%" height="15" fill="rgb(243,180,28)"/><text x="78.5051%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (47 samples, 0.09%)</title><rect x="78.6854%" y="149" width="0.0883%" height="15" fill="rgb(208,167,24)"/><text x="78.9354%" y="159.50"></text></g><g><title>zuma`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (338 samples, 0.64%)</title><rect x="78.1442%" y="165" width="0.6351%" height="15" fill="rgb(245,73,45)"/><text x="78.3942%" y="175.50"></text></g><g><title>zuma`core::fmt::Formatter::pad_integral (16 samples, 0.03%)</title><rect x="78.7812%" y="165" width="0.0301%" height="15" fill="rgb(237,203,48)"/><text x="79.0312%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="78.9165%" y="149" width="0.0207%" height="15" fill="rgb(211,197,16)"/><text x="79.1665%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (9 samples, 0.02%)</title><rect x="79.0819%" y="101" width="0.0169%" height="15" fill="rgb(243,99,51)"/><text x="79.3319%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (8 samples, 0.02%)</title><rect x="79.0988%" y="101" width="0.0150%" height="15" fill="rgb(215,123,29)"/><text x="79.3488%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (46 samples, 0.09%)</title><rect x="79.1627%" y="85" width="0.0864%" height="15" fill="rgb(239,186,37)"/><text x="79.4127%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.02%)</title><rect x="79.2491%" y="85" width="0.0150%" height="15" fill="rgb(252,136,39)"/><text x="79.4991%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (12 samples, 0.02%)</title><rect x="79.3994%" y="53" width="0.0225%" height="15" fill="rgb(223,213,32)"/><text x="79.6494%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (122 samples, 0.23%)</title><rect x="79.2641%" y="85" width="0.2293%" height="15" fill="rgb(233,115,5)"/><text x="79.5141%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (113 samples, 0.21%)</title><rect x="79.2811%" y="69" width="0.2123%" height="15" fill="rgb(207,226,44)"/><text x="79.5311%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (37 samples, 0.07%)</title><rect x="79.4239%" y="53" width="0.0695%" height="15" fill="rgb(208,126,0)"/><text x="79.6739%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.03%)</title><rect x="79.4671%" y="37" width="0.0263%" height="15" fill="rgb(244,66,21)"/><text x="79.7171%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (36 samples, 0.07%)</title><rect x="79.4934%" y="85" width="0.0676%" height="15" fill="rgb(222,97,12)"/><text x="79.7434%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (34 samples, 0.06%)</title><rect x="79.4972%" y="69" width="0.0639%" height="15" fill="rgb(219,213,19)"/><text x="79.7472%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.02%)</title><rect x="79.7396%" y="69" width="0.0169%" height="15" fill="rgb(252,169,30)"/><text x="79.9896%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (352 samples, 0.66%)</title><rect x="79.1232%" y="101" width="0.6614%" height="15" fill="rgb(206,32,51)"/><text x="79.3732%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (116 samples, 0.22%)</title><rect x="79.5667%" y="85" width="0.2180%" height="15" fill="rgb(250,172,42)"/><text x="79.8167%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (15 samples, 0.03%)</title><rect x="79.7565%" y="69" width="0.0282%" height="15" fill="rgb(209,34,43)"/><text x="80.0065%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (385 samples, 0.72%)</title><rect x="79.0668%" y="117" width="0.7235%" height="15" fill="rgb(223,11,35)"/><text x="79.3168%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (35 samples, 0.07%)</title><rect x="79.7922%" y="117" width="0.0658%" height="15" fill="rgb(251,219,26)"/><text x="80.0422%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (34 samples, 0.06%)</title><rect x="79.7941%" y="101" width="0.0639%" height="15" fill="rgb(231,119,3)"/><text x="80.0441%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`realloc (440 samples, 0.83%)</title><rect x="79.0349%" y="133" width="0.8268%" height="15" fill="rgb(216,97,11)"/><text x="79.2849%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (34 samples, 0.06%)</title><rect x="79.8655%" y="133" width="0.0639%" height="15" fill="rgb(223,59,9)"/><text x="80.1155%" y="143.50"></text></g><g><title>zuma`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (533 samples, 1.00%)</title><rect x="78.9372%" y="149" width="1.0016%" height="15" fill="rgb(233,93,31)"/><text x="79.1872%" y="159.50"></text></g><g><title>zuma`core::fmt::Formatter::pad_integral (65 samples, 0.12%)</title><rect x="79.9557%" y="149" width="0.1221%" height="15" fill="rgb(239,81,33)"/><text x="80.2057%" y="159.50"></text></g><g><title>zuma`alloc::fmt::format (1,472 samples, 2.77%)</title><rect x="77.3700%" y="197" width="2.7660%" height="15" fill="rgb(213,120,34)"/><text x="77.6200%" y="207.50">zu..</text></g><g><title>zuma`core::fmt::write (1,110 samples, 2.09%)</title><rect x="78.0502%" y="181" width="2.0858%" height="15" fill="rgb(243,49,53)"/><text x="78.3002%" y="191.50">z..</text></g><g><title>zuma`core::fmt::num::imp::_&lt;impl core::fmt::Display for u8&gt;::fmt (705 samples, 1.32%)</title><rect x="78.8113%" y="165" width="1.3248%" height="15" fill="rgb(247,216,33)"/><text x="79.0613%" y="175.50"></text></g><g><title>zuma`core::fmt::Formatter::pad_integral (26 samples, 0.05%)</title><rect x="80.0872%" y="149" width="0.0489%" height="15" fill="rgb(226,26,14)"/><text x="80.3372%" y="159.50"></text></g><g><title>zuma`core::fmt::Formatter::pad_integral::write_prefix (26 samples, 0.05%)</title><rect x="80.0872%" y="133" width="0.0489%" height="15" fill="rgb(215,49,53)"/><text x="80.3372%" y="143.50"></text></g><g><title>zuma`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (23 samples, 0.04%)</title><rect x="80.1360%" y="197" width="0.0432%" height="15" fill="rgb(245,162,40)"/><text x="80.3860%" y="207.50"></text></g><g><title>zuma`core::fmt::float::_&lt;impl core::fmt::Display for f32&gt;::fmt (11 samples, 0.02%)</title><rect x="80.1830%" y="197" width="0.0207%" height="15" fill="rgb(229,68,17)"/><text x="80.4330%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (31 samples, 0.06%)</title><rect x="80.4705%" y="165" width="0.0583%" height="15" fill="rgb(213,182,10)"/><text x="80.7205%" y="175.50"></text></g><g><title>zuma`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (99 samples, 0.19%)</title><rect x="80.3841%" y="181" width="0.1860%" height="15" fill="rgb(245,125,30)"/><text x="80.6341%" y="191.50"></text></g><g><title>zuma`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.04%)</title><rect x="80.5288%" y="165" width="0.0413%" height="15" fill="rgb(232,202,2)"/><text x="80.7788%" y="175.50"></text></g><g><title>zuma`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.02%)</title><rect x="80.5758%" y="181" width="0.0169%" height="15" fill="rgb(237,140,51)"/><text x="80.8258%" y="191.50"></text></g><g><title>zuma`core::fmt::float::_&lt;impl core::fmt::Display for f32&gt;::fmt (15 samples, 0.03%)</title><rect x="80.6077%" y="181" width="0.0282%" height="15" fill="rgb(236,157,25)"/><text x="80.8577%" y="191.50"></text></g><g><title>zuma`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (9 samples, 0.02%)</title><rect x="81.1320%" y="165" width="0.0169%" height="15" fill="rgb(219,209,0)"/><text x="81.3820%" y="175.50"></text></g><g><title>zuma`core::fmt::Formatter::pad_formatted_parts (34 samples, 0.06%)</title><rect x="81.1489%" y="165" width="0.0639%" height="15" fill="rgb(240,116,54)"/><text x="81.3989%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.01%)</title><rect x="81.3819%" y="149" width="0.0113%" height="15" fill="rgb(216,10,36)"/><text x="81.6319%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (33 samples, 0.06%)</title><rect x="81.5059%" y="133" width="0.0620%" height="15" fill="rgb(222,72,44)"/><text x="81.7559%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.01%)</title><rect x="81.6863%" y="101" width="0.0113%" height="15" fill="rgb(232,159,9)"/><text x="81.9363%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (21 samples, 0.04%)</title><rect x="81.7784%" y="85" width="0.0395%" height="15" fill="rgb(210,39,32)"/><text x="82.0284%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (885 samples, 1.66%)</title><rect x="81.8178%" y="85" width="1.6630%" height="15" fill="rgb(216,194,45)"/><text x="82.0678%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (847 samples, 1.59%)</title><rect x="81.8892%" y="69" width="1.5916%" height="15" fill="rgb(218,18,35)"/><text x="82.1392%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (240 samples, 0.45%)</title><rect x="83.0299%" y="53" width="0.4510%" height="15" fill="rgb(207,83,51)"/><text x="83.2799%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (78 samples, 0.15%)</title><rect x="83.3343%" y="37" width="0.1466%" height="15" fill="rgb(225,63,43)"/><text x="83.5843%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (952 samples, 1.79%)</title><rect x="81.6976%" y="101" width="1.7889%" height="15" fill="rgb(207,57,36)"/><text x="81.9476%" y="111.50">l..</text></g><g><title>libsystem_malloc.dylib`malloc (982 samples, 1.85%)</title><rect x="81.6525%" y="117" width="1.8453%" height="15" fill="rgb(216,99,33)"/><text x="81.9025%" y="127.50">l..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="83.4865%" y="101" width="0.0113%" height="15" fill="rgb(225,42,16)"/><text x="83.7365%" y="111.50"></text></g><g><title>zuma`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1,123 samples, 2.11%)</title><rect x="81.3932%" y="149" width="2.1102%" height="15" fill="rgb(220,201,45)"/><text x="81.6432%" y="159.50">z..</text></g><g><title>zuma`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,020 samples, 1.92%)</title><rect x="81.5867%" y="133" width="1.9167%" height="15" fill="rgb(225,33,4)"/><text x="81.8367%" y="143.50">z..</text></g><g><title>zuma`core::fmt::Formatter::write_formatted_parts (1,235 samples, 2.32%)</title><rect x="81.2128%" y="165" width="2.3207%" height="15" fill="rgb(224,33,50)"/><text x="81.4628%" y="175.50">z..</text></g><g><title>zuma`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.03%)</title><rect x="83.5034%" y="149" width="0.0301%" height="15" fill="rgb(246,198,51)"/><text x="83.7534%" y="159.50"></text></g><g><title>zuma`core::fmt::float::float_to_decimal_common_shortest (2,194 samples, 4.12%)</title><rect x="80.6359%" y="181" width="4.1227%" height="15" fill="rgb(205,22,4)"/><text x="80.8859%" y="191.50">zuma..</text></g><g><title>zuma`core::num::flt2dec::strategy::grisu::format_shortest_opt (652 samples, 1.23%)</title><rect x="83.5335%" y="165" width="1.2252%" height="15" fill="rgb(206,3,8)"/><text x="83.7835%" y="175.50"></text></g><g><title>zuma`core::fmt::write (2,427 samples, 4.56%)</title><rect x="80.2037%" y="197" width="4.5606%" height="15" fill="rgb(251,23,15)"/><text x="80.4537%" y="207.50">zuma`..</text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (15 samples, 0.03%)</title><rect x="84.8319%" y="181" width="0.0282%" height="15" fill="rgb(252,88,28)"/><text x="85.0819%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (38 samples, 0.07%)</title><rect x="84.9127%" y="165" width="0.0714%" height="15" fill="rgb(212,127,14)"/><text x="85.1627%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (35 samples, 0.07%)</title><rect x="84.9184%" y="149" width="0.0658%" height="15" fill="rgb(247,145,37)"/><text x="85.1684%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (68 samples, 0.13%)</title><rect x="84.8601%" y="181" width="0.1278%" height="15" fill="rgb(209,117,53)"/><text x="85.1101%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (264 samples, 0.50%)</title><rect x="84.9879%" y="181" width="0.4961%" height="15" fill="rgb(212,90,42)"/><text x="85.2379%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (154 samples, 0.29%)</title><rect x="85.1946%" y="165" width="0.2894%" height="15" fill="rgb(218,164,37)"/><text x="85.4446%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (86 samples, 0.16%)</title><rect x="85.3224%" y="149" width="0.1616%" height="15" fill="rgb(246,65,34)"/><text x="85.5724%" y="159.50"></text></g><g><title>zuma`core::ptr::drop_in_place (386 samples, 0.73%)</title><rect x="84.7643%" y="197" width="0.7253%" height="15" fill="rgb(231,100,33)"/><text x="85.0143%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (22 samples, 0.04%)</title><rect x="86.2957%" y="181" width="0.0413%" height="15" fill="rgb(228,126,14)"/><text x="86.5457%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (184 samples, 0.35%)</title><rect x="86.3371%" y="181" width="0.3458%" height="15" fill="rgb(215,173,21)"/><text x="86.5871%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (113 samples, 0.21%)</title><rect x="86.4705%" y="165" width="0.2123%" height="15" fill="rgb(210,6,40)"/><text x="86.7205%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (100 samples, 0.19%)</title><rect x="86.4949%" y="149" width="0.1879%" height="15" fill="rgb(212,48,18)"/><text x="86.7449%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (136 samples, 0.26%)</title><rect x="87.6243%" y="149" width="0.2556%" height="15" fill="rgb(230,214,11)"/><text x="87.8743%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (727 samples, 1.37%)</title><rect x="86.6828%" y="181" width="1.3661%" height="15" fill="rgb(254,105,39)"/><text x="86.9328%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (461 samples, 0.87%)</title><rect x="87.1827%" y="165" width="0.8663%" height="15" fill="rgb(245,158,5)"/><text x="87.4327%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (90 samples, 0.17%)</title><rect x="87.8798%" y="149" width="0.1691%" height="15" fill="rgb(249,208,11)"/><text x="88.1298%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.01%)</title><rect x="88.0489%" y="181" width="0.0113%" height="15" fill="rgb(210,39,28)"/><text x="88.2989%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (53 samples, 0.10%)</title><rect x="88.0658%" y="181" width="0.0996%" height="15" fill="rgb(211,56,53)"/><text x="88.3158%" y="191.50"></text></g><g><title>zuma`hashbrown::map::HashMap&lt;K,V,S&gt;::remove (1,547 samples, 2.91%)</title><rect x="85.4896%" y="197" width="2.9070%" height="15" fill="rgb(226,201,30)"/><text x="85.7396%" y="207.50">zu..</text></g><g><title>zuma`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (123 samples, 0.23%)</title><rect x="88.1654%" y="181" width="0.2311%" height="15" fill="rgb(239,101,34)"/><text x="88.4154%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (17 samples, 0.03%)</title><rect x="89.0918%" y="165" width="0.0319%" height="15" fill="rgb(226,209,5)"/><text x="89.3418%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (35 samples, 0.07%)</title><rect x="89.2121%" y="149" width="0.0658%" height="15" fill="rgb(250,105,47)"/><text x="89.4621%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.01%)</title><rect x="89.3662%" y="133" width="0.0132%" height="15" fill="rgb(230,72,3)"/><text x="89.6162%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,268 samples, 2.38%)</title><rect x="89.2779%" y="149" width="2.3827%" height="15" fill="rgb(232,218,39)"/><text x="89.5279%" y="159.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1,214 samples, 2.28%)</title><rect x="89.3793%" y="133" width="2.2812%" height="15" fill="rgb(248,166,6)"/><text x="89.6293%" y="143.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (489 samples, 0.92%)</title><rect x="90.7417%" y="117" width="0.9189%" height="15" fill="rgb(247,89,20)"/><text x="90.9917%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (213 samples, 0.40%)</title><rect x="91.2603%" y="101" width="0.4002%" height="15" fill="rgb(248,130,54)"/><text x="91.5103%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1,358 samples, 2.55%)</title><rect x="89.1238%" y="165" width="2.5518%" height="15" fill="rgb(234,196,4)"/><text x="89.3738%" y="175.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="91.6606%" y="149" width="0.0150%" height="15" fill="rgb(250,143,31)"/><text x="91.9106%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1,416 samples, 2.66%)</title><rect x="89.0411%" y="181" width="2.6608%" height="15" fill="rgb(211,110,34)"/><text x="89.2911%" y="191.50">li..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.03%)</title><rect x="91.6756%" y="165" width="0.0263%" height="15" fill="rgb(215,124,48)"/><text x="91.9256%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (9 samples, 0.02%)</title><rect x="91.7019%" y="181" width="0.0169%" height="15" fill="rgb(216,46,13)"/><text x="91.9519%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (52 samples, 0.10%)</title><rect x="91.7226%" y="181" width="0.0977%" height="15" fill="rgb(205,184,25)"/><text x="91.9726%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.01%)</title><rect x="91.9556%" y="133" width="0.0113%" height="15" fill="rgb(228,1,10)"/><text x="92.2056%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (21 samples, 0.04%)</title><rect x="92.1566%" y="101" width="0.0395%" height="15" fill="rgb(213,116,27)"/><text x="92.4066%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (184 samples, 0.35%)</title><rect x="91.9669%" y="133" width="0.3458%" height="15" fill="rgb(241,95,50)"/><text x="92.2169%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (172 samples, 0.32%)</title><rect x="91.9894%" y="117" width="0.3232%" height="15" fill="rgb(238,48,32)"/><text x="92.2394%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (60 samples, 0.11%)</title><rect x="92.1999%" y="101" width="0.1127%" height="15" fill="rgb(235,113,49)"/><text x="92.4499%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (25 samples, 0.05%)</title><rect x="92.2656%" y="85" width="0.0470%" height="15" fill="rgb(205,127,43)"/><text x="92.5156%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (204 samples, 0.38%)</title><rect x="91.9311%" y="149" width="0.3833%" height="15" fill="rgb(250,162,2)"/><text x="92.1811%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (212 samples, 0.40%)</title><rect x="91.9218%" y="165" width="0.3984%" height="15" fill="rgb(220,13,41)"/><text x="92.1718%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (6 samples, 0.01%)</title><rect x="92.3840%" y="133" width="0.0113%" height="15" fill="rgb(249,221,25)"/><text x="92.6340%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (10 samples, 0.02%)</title><rect x="92.4009%" y="133" width="0.0188%" height="15" fill="rgb(215,208,19)"/><text x="92.6509%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (49 samples, 0.09%)</title><rect x="92.4554%" y="117" width="0.0921%" height="15" fill="rgb(236,175,2)"/><text x="92.7054%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (20 samples, 0.04%)</title><rect x="92.7448%" y="85" width="0.0376%" height="15" fill="rgb(241,52,2)"/><text x="92.9948%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (192 samples, 0.36%)</title><rect x="92.5475%" y="117" width="0.3608%" height="15" fill="rgb(248,140,14)"/><text x="92.7975%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (183 samples, 0.34%)</title><rect x="92.5644%" y="101" width="0.3439%" height="15" fill="rgb(253,22,42)"/><text x="92.8144%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (67 samples, 0.13%)</title><rect x="92.7824%" y="85" width="0.1259%" height="15" fill="rgb(234,61,47)"/><text x="93.0324%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (33 samples, 0.06%)</title><rect x="92.8463%" y="69" width="0.0620%" height="15" fill="rgb(208,226,15)"/><text x="93.0963%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (30 samples, 0.06%)</title><rect x="92.9083%" y="117" width="0.0564%" height="15" fill="rgb(217,221,4)"/><text x="93.1583%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (28 samples, 0.05%)</title><rect x="92.9120%" y="101" width="0.0526%" height="15" fill="rgb(212,174,34)"/><text x="93.1620%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (51 samples, 0.10%)</title><rect x="92.9647%" y="117" width="0.0958%" height="15" fill="rgb(253,83,4)"/><text x="93.2147%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (451 samples, 0.85%)</title><rect x="92.4310%" y="133" width="0.8475%" height="15" fill="rgb(250,195,49)"/><text x="92.6810%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (116 samples, 0.22%)</title><rect x="93.0605%" y="117" width="0.2180%" height="15" fill="rgb(241,192,25)"/><text x="93.3105%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (505 samples, 0.95%)</title><rect x="92.3558%" y="149" width="0.9489%" height="15" fill="rgb(208,124,10)"/><text x="92.6058%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (23 samples, 0.04%)</title><rect x="93.3048%" y="149" width="0.0432%" height="15" fill="rgb(222,33,0)"/><text x="93.5548%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (21 samples, 0.04%)</title><rect x="93.3085%" y="133" width="0.0395%" height="15" fill="rgb(234,209,28)"/><text x="93.5585%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`realloc (545 samples, 1.02%)</title><rect x="92.3258%" y="165" width="1.0241%" height="15" fill="rgb(224,11,23)"/><text x="92.5758%" y="175.50"></text></g><g><title>zuma`zumalib::interpretation::graphics::GraphicNode::insert (2,641 samples, 4.96%)</title><rect x="88.3966%" y="197" width="4.9627%" height="15" fill="rgb(232,99,1)"/><text x="88.6466%" y="207.50">zuma`z..</text></g><g><title>zuma`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (815 samples, 1.53%)</title><rect x="91.8278%" y="181" width="1.5315%" height="15" fill="rgb(237,95,45)"/><text x="92.0778%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (6 samples, 0.01%)</title><rect x="93.5209%" y="181" width="0.0113%" height="15" fill="rgb(208,109,11)"/><text x="93.7709%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (53 samples, 0.10%)</title><rect x="93.5998%" y="165" width="0.0996%" height="15" fill="rgb(216,190,48)"/><text x="93.8498%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (49 samples, 0.09%)</title><rect x="93.6073%" y="149" width="0.0921%" height="15" fill="rgb(251,171,36)"/><text x="93.8573%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (96 samples, 0.18%)</title><rect x="93.5321%" y="181" width="0.1804%" height="15" fill="rgb(230,62,22)"/><text x="93.7821%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.01%)</title><rect x="93.6994%" y="165" width="0.0132%" height="15" fill="rgb(225,114,35)"/><text x="93.9494%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (47 samples, 0.09%)</title><rect x="94.1071%" y="149" width="0.0883%" height="15" fill="rgb(215,118,42)"/><text x="94.3571%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (321 samples, 0.60%)</title><rect x="93.7125%" y="181" width="0.6032%" height="15" fill="rgb(243,119,21)"/><text x="93.9625%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (206 samples, 0.39%)</title><rect x="93.9286%" y="165" width="0.3871%" height="15" fill="rgb(252,177,53)"/><text x="94.1786%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (64 samples, 0.12%)</title><rect x="94.1955%" y="149" width="0.1203%" height="15" fill="rgb(237,209,29)"/><text x="94.4455%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (23 samples, 0.04%)</title><rect x="94.3157%" y="181" width="0.0432%" height="15" fill="rgb(212,65,23)"/><text x="94.5657%" y="191.50"></text></g><g><title>zuma`__rdl_dealloc (7 samples, 0.01%)</title><rect x="94.3702%" y="181" width="0.0132%" height="15" fill="rgb(230,222,46)"/><text x="94.6202%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (29 samples, 0.05%)</title><rect x="94.4529%" y="165" width="0.0545%" height="15" fill="rgb(215,135,32)"/><text x="94.7029%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (143 samples, 0.27%)</title><rect x="94.6634%" y="149" width="0.2687%" height="15" fill="rgb(246,101,22)"/><text x="94.9134%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (126 samples, 0.24%)</title><rect x="94.6953%" y="133" width="0.2368%" height="15" fill="rgb(206,107,13)"/><text x="94.9453%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (238 samples, 0.45%)</title><rect x="94.5074%" y="165" width="0.4472%" height="15" fill="rgb(250,100,44)"/><text x="94.7574%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (12 samples, 0.02%)</title><rect x="94.9321%" y="149" width="0.0225%" height="15" fill="rgb(231,147,38)"/><text x="95.1821%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (7 samples, 0.01%)</title><rect x="95.5841%" y="149" width="0.0132%" height="15" fill="rgb(229,8,40)"/><text x="95.8341%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (174 samples, 0.33%)</title><rect x="96.1478%" y="133" width="0.3270%" height="15" fill="rgb(221,135,30)"/><text x="96.3978%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (975 samples, 1.83%)</title><rect x="94.9546%" y="165" width="1.8321%" height="15" fill="rgb(249,193,18)"/><text x="95.2046%" y="175.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (633 samples, 1.19%)</title><rect x="95.5973%" y="149" width="1.1895%" height="15" fill="rgb(209,133,39)"/><text x="95.8473%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (166 samples, 0.31%)</title><rect x="96.4748%" y="133" width="0.3119%" height="15" fill="rgb(232,100,14)"/><text x="96.7248%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (9 samples, 0.02%)</title><rect x="96.8882%" y="149" width="0.0169%" height="15" fill="rgb(224,185,1)"/><text x="97.1382%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (46 samples, 0.09%)</title><rect x="96.9559%" y="133" width="0.0864%" height="15" fill="rgb(223,139,8)"/><text x="97.2059%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (42 samples, 0.08%)</title><rect x="96.9634%" y="117" width="0.0789%" height="15" fill="rgb(232,213,38)"/><text x="97.2134%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (78 samples, 0.15%)</title><rect x="96.9051%" y="149" width="0.1466%" height="15" fill="rgb(207,94,22)"/><text x="97.1551%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (71 samples, 0.13%)</title><rect x="97.4313%" y="117" width="0.1334%" height="15" fill="rgb(219,183,54)"/><text x="97.6813%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (310 samples, 0.58%)</title><rect x="97.0517%" y="149" width="0.5825%" height="15" fill="rgb(216,185,54)"/><text x="97.3017%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (193 samples, 0.36%)</title><rect x="97.2715%" y="133" width="0.3627%" height="15" fill="rgb(254,217,39)"/><text x="97.5215%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (37 samples, 0.07%)</title><rect x="97.5647%" y="117" width="0.0695%" height="15" fill="rgb(240,178,23)"/><text x="97.8147%" y="127.50"></text></g><g><title>zuma`core::ptr::drop_in_place (1,733 samples, 3.26%)</title><rect x="94.3871%" y="181" width="3.2565%" height="15" fill="rgb(218,11,47)"/><text x="94.6371%" y="191.50">zum..</text></g><g><title>zuma`core::ptr::drop_in_place (438 samples, 0.82%)</title><rect x="96.8206%" y="165" width="0.8230%" height="15" fill="rgb(218,51,51)"/><text x="97.0706%" y="175.50"></text></g><g><title>zuma`&lt;zumalib::parsing::ast::Value as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="97.8108%" y="165" width="0.0301%" height="15" fill="rgb(238,126,27)"/><text x="98.0608%" y="175.50"></text></g><g><title>zuma`hashbrown::map::make_hash (12 samples, 0.02%)</title><rect x="97.8409%" y="165" width="0.0225%" height="15" fill="rgb(249,202,22)"/><text x="98.0909%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (12 samples, 0.02%)</title><rect x="98.3502%" y="149" width="0.0225%" height="15" fill="rgb(254,195,49)"/><text x="98.6002%" y="159.50"></text></g><g><title>zuma`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (27 samples, 0.05%)</title><rect x="98.3727%" y="149" width="0.0507%" height="15" fill="rgb(208,123,14)"/><text x="98.6227%" y="159.50"></text></g><g><title>zuma`&lt;zumalib::parsing::ast::Value as core::clone::Clone&gt;::clone (30 samples, 0.06%)</title><rect x="98.4234%" y="149" width="0.0564%" height="15" fill="rgb(224,200,8)"/><text x="98.6734%" y="159.50"></text></g><g><title>zuma`zumalib::interpretation::helpers::get_color (3,083 samples, 5.79%)</title><rect x="93.3593%" y="197" width="5.7933%" height="15" fill="rgb(217,61,36)"/><text x="93.6093%" y="207.50">zuma`zu..</text></g><g><title>zuma`zumalib::interpretation::helpers::get_value (801 samples, 1.51%)</title><rect x="97.6474%" y="181" width="1.5052%" height="15" fill="rgb(206,35,45)"/><text x="97.8974%" y="191.50"></text></g><g><title>zuma`zumalib::interpretation::helpers::get_constant (686 samples, 1.29%)</title><rect x="97.8635%" y="165" width="1.2891%" height="15" fill="rgb(217,65,33)"/><text x="98.1135%" y="175.50"></text></g><g><title>zuma`hashbrown::map::make_hash (358 samples, 0.67%)</title><rect x="98.4798%" y="149" width="0.6727%" height="15" fill="rgb(222,158,48)"/><text x="98.7298%" y="159.50"></text></g><g><title>zuma`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (157 samples, 0.30%)</title><rect x="98.8575%" y="133" width="0.2950%" height="15" fill="rgb(254,2,54)"/><text x="99.1075%" y="143.50"></text></g><g><title>zuma`&lt;zumalib::parsing::ast::Value as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="99.2897%" y="181" width="0.0301%" height="15" fill="rgb(250,143,38)"/><text x="99.5397%" y="191.50"></text></g><g><title>zuma`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="99.5828%" y="165" width="0.0169%" height="15" fill="rgb(248,25,0)"/><text x="99.8328%" y="175.50"></text></g><g><title>zuma`&lt;zumalib::parsing::ast::Value as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="99.5998%" y="165" width="0.0113%" height="15" fill="rgb(206,152,27)"/><text x="99.8498%" y="175.50"></text></g><g><title>zuma`zumalib::interpretation::handle_expressions (27,716 samples, 52.08%)</title><rect x="47.9076%" y="229" width="52.0811%" height="15" fill="rgb(240,77,30)"/><text x="48.1576%" y="239.50">zuma`zumalib::interpretation::handle_expressions</text></g><g><title>zuma`zumalib::interpretation::stdlib::rectangle (14,471 samples, 27.19%)</title><rect x="72.7963%" y="213" width="27.1924%" height="15" fill="rgb(231,5,3)"/><text x="73.0463%" y="223.50">zuma`zumalib::interpretation::stdlib::rectan..</text></g><g><title>zuma`zumalib::interpretation::helpers::get_value (445 samples, 0.84%)</title><rect x="99.1525%" y="197" width="0.8362%" height="15" fill="rgb(207,226,32)"/><text x="99.4025%" y="207.50"></text></g><g><title>zuma`zumalib::interpretation::helpers::get_constant (354 samples, 0.67%)</title><rect x="99.3235%" y="181" width="0.6652%" height="15" fill="rgb(222,207,47)"/><text x="99.5735%" y="191.50"></text></g><g><title>zuma`hashbrown::map::make_hash (201 samples, 0.38%)</title><rect x="99.6110%" y="165" width="0.3777%" height="15" fill="rgb(229,115,45)"/><text x="99.8610%" y="175.50"></text></g><g><title>zuma`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (92 samples, 0.17%)</title><rect x="99.8158%" y="149" width="0.1729%" height="15" fill="rgb(224,191,6)"/><text x="100.0658%" y="159.50"></text></g><g><title>zuma`zumalib::ZumaCompiler::compile (52,828 samples, 99.27%)</title><rect x="0.7272%" y="293" width="99.2690%" height="15" fill="rgb(230,227,24)"/><text x="0.9772%" y="303.50">zuma`zumalib::ZumaCompiler::compile</text></g><g><title>zuma`zumalib::interpretation::interpret (34,224 samples, 64.31%)</title><rect x="35.6860%" y="277" width="64.3103%" height="15" fill="rgb(228,80,19)"/><text x="35.9360%" y="287.50">zuma`zumalib::interpretation::interpret</text></g><g><title>zuma`zumalib::interpretation::handle_expressions (34,224 samples, 64.31%)</title><rect x="35.6860%" y="261" width="64.3103%" height="15" fill="rgb(247,229,0)"/><text x="35.9360%" y="271.50">zuma`zumalib::interpretation::handle_expressions</text></g><g><title>zuma`zumalib::interpretation::handle_expressions (34,014 samples, 63.92%)</title><rect x="36.0806%" y="245" width="63.9157%" height="15" fill="rgb(237,194,15)"/><text x="36.3306%" y="255.50">zuma`zumalib::interpretation::handle_expressions</text></g><g><title>all (53,217 samples, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(219,203,20)"/><text x="0.2500%" y="431.50"></text></g><g><title>zuma`0x1 (53,217 samples, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(234,128,8)"/><text x="0.2500%" y="415.50">zuma`0x1</text></g><g><title>libdyld.dylib`start (53,217 samples, 100.00%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(248,202,8)"/><text x="0.2500%" y="399.50">libdyld.dylib`start</text></g><g><title>zuma`main (53,217 samples, 100.00%)</title><rect x="0.0000%" y="373" width="100.0000%" height="15" fill="rgb(206,104,37)"/><text x="0.2500%" y="383.50">zuma`main</text></g><g><title>zuma`std::rt::lang_start_internal (53,217 samples, 100.00%)</title><rect x="0.0000%" y="357" width="100.0000%" height="15" fill="rgb(223,8,27)"/><text x="0.2500%" y="367.50">zuma`std::rt::lang_start_internal</text></g><g><title>zuma`std::rt::lang_start::_{{closure}} (53,217 samples, 100.00%)</title><rect x="0.0000%" y="341" width="100.0000%" height="15" fill="rgb(216,217,28)"/><text x="0.2500%" y="351.50">zuma`std::rt::lang_start::_{{closure}}</text></g><g><title>zuma`std::sys_common::backtrace::__rust_begin_short_backtrace (53,217 samples, 100.00%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(249,199,1)"/><text x="0.2500%" y="335.50">zuma`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>zuma`zuma::main (53,128 samples, 99.83%)</title><rect x="0.1672%" y="309" width="99.8328%" height="15" fill="rgb(240,85,17)"/><text x="0.4172%" y="319.50">zuma`zuma::main</text></g></svg></svg>