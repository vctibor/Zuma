use std::str::FromStr;
use crate::parsing::zuma_model::*;

grammar;

pub Prim: GeometricPrimitive = {
    "line" <start:Point> <end:Point> <color:Color?> ";" => GeometricPrimitive::Line(Line { start, end, color })
};

pub Expr: Expr = {
    Bool => Expr::Boolean(<>),
    Number => Expr::Number(<>),
    Color => Expr::Color(<>),
    Point => Expr::Point(<>),
};

Point: Point = {
    "[" <x:Number> "," <y:Number> "]" => Point { x, y }
};

Color: Color = r"black|white|red|green|blue|yellow|#[a-f0-9]{6}" => parse_color(<>.to_string());

Number: f32 = r"[0-9]+\.?[0-9]*" => f32::from_str(<>).unwrap();

Bool: bool = r"true|false" => bool::from_str(<>).unwrap();