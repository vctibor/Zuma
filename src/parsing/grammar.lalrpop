use std::str::FromStr;
use crate::parsing::zuma_model::*;

grammar;

pub Prim: GeometricPrimitive = {
    "line" "start" "=" <start:Point> "end" "=" <end:Point> "color" "=" <color:Color> ";" => GeometricPrimitive::Line(Line { start, end, color: Some(color) })
};

pub Point: Point = {
    "[" <x:Number> "," <y:Number> "]" => Point { x, y }
};

pub Color: Color = r"black|white|red|green|blue|yellow|#[a-f0-9]{6}" => parse_color(<>.to_string());

pub Number: f32 = r"[0-9]+\.?[0-9]*" => f32::from_str(<>).unwrap();

pub Bool: bool = r"true|false" => bool::from_str(<>).unwrap();